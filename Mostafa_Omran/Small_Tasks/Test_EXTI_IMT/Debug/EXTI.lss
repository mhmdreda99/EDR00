
EXTI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007fe  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a38  00000000  00000000  00000854  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000046c  00000000  00000000  0000128c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__vector_1>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 ba 03 	call	0x774	; 0x774 <main>
  64:	0c 94 fd 03 	jmp	0x7fa	; 0x7fa <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_u8SetPinDirection>:




u8 DIO_u8SetPinDirection(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Direction)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	28 97       	sbiw	r28, 0x08	; 8
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	8a 83       	std	Y+2, r24	; 0x02
  82:	6b 83       	std	Y+3, r22	; 0x03
  84:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
  86:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Pin<= DIO_u8PIN7)
  88:	8b 81       	ldd	r24, Y+3	; 0x03
  8a:	88 30       	cpi	r24, 0x08	; 8
  8c:	08 f0       	brcs	.+2      	; 0x90 <DIO_u8SetPinDirection+0x24>
  8e:	f4 c0       	rjmp	.+488    	; 0x278 <DIO_u8SetPinDirection+0x20c>
	{
		if(Copy_u8Direction==DIO_u8PIN_INPUT)
  90:	8c 81       	ldd	r24, Y+4	; 0x04
  92:	88 23       	and	r24, r24
  94:	09 f0       	breq	.+2      	; 0x98 <DIO_u8SetPinDirection+0x2c>
  96:	77 c0       	rjmp	.+238    	; 0x186 <DIO_u8SetPinDirection+0x11a>
			switch(Copy_u8Port)
  98:	8a 81       	ldd	r24, Y+2	; 0x02
  9a:	28 2f       	mov	r18, r24
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	38 87       	std	Y+8, r19	; 0x08
  a0:	2f 83       	std	Y+7, r18	; 0x07
  a2:	8f 81       	ldd	r24, Y+7	; 0x07
  a4:	98 85       	ldd	r25, Y+8	; 0x08
  a6:	81 30       	cpi	r24, 0x01	; 1
  a8:	91 05       	cpc	r25, r1
  aa:	59 f1       	breq	.+86     	; 0x102 <DIO_u8SetPinDirection+0x96>
  ac:	2f 81       	ldd	r18, Y+7	; 0x07
  ae:	38 85       	ldd	r19, Y+8	; 0x08
  b0:	22 30       	cpi	r18, 0x02	; 2
  b2:	31 05       	cpc	r19, r1
  b4:	2c f4       	brge	.+10     	; 0xc0 <DIO_u8SetPinDirection+0x54>
  b6:	8f 81       	ldd	r24, Y+7	; 0x07
  b8:	98 85       	ldd	r25, Y+8	; 0x08
  ba:	00 97       	sbiw	r24, 0x00	; 0
  bc:	69 f0       	breq	.+26     	; 0xd8 <DIO_u8SetPinDirection+0x6c>
  be:	60 c0       	rjmp	.+192    	; 0x180 <DIO_u8SetPinDirection+0x114>
  c0:	2f 81       	ldd	r18, Y+7	; 0x07
  c2:	38 85       	ldd	r19, Y+8	; 0x08
  c4:	22 30       	cpi	r18, 0x02	; 2
  c6:	31 05       	cpc	r19, r1
  c8:	89 f1       	breq	.+98     	; 0x12c <DIO_u8SetPinDirection+0xc0>
  ca:	8f 81       	ldd	r24, Y+7	; 0x07
  cc:	98 85       	ldd	r25, Y+8	; 0x08
  ce:	83 30       	cpi	r24, 0x03	; 3
  d0:	91 05       	cpc	r25, r1
  d2:	09 f4       	brne	.+2      	; 0xd6 <DIO_u8SetPinDirection+0x6a>
  d4:	40 c0       	rjmp	.+128    	; 0x156 <DIO_u8SetPinDirection+0xea>
  d6:	54 c0       	rjmp	.+168    	; 0x180 <DIO_u8SetPinDirection+0x114>
			{
			case DIO_u8PORTA: CLR_BIT(DDRA,Copy_u8Pin);break;
  d8:	aa e3       	ldi	r26, 0x3A	; 58
  da:	b0 e0       	ldi	r27, 0x00	; 0
  dc:	ea e3       	ldi	r30, 0x3A	; 58
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	48 2f       	mov	r20, r24
  e4:	8b 81       	ldd	r24, Y+3	; 0x03
  e6:	28 2f       	mov	r18, r24
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	02 2e       	mov	r0, r18
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <DIO_u8SetPinDirection+0x8a>
  f2:	88 0f       	add	r24, r24
  f4:	99 1f       	adc	r25, r25
  f6:	0a 94       	dec	r0
  f8:	e2 f7       	brpl	.-8      	; 0xf2 <DIO_u8SetPinDirection+0x86>
  fa:	80 95       	com	r24
  fc:	84 23       	and	r24, r20
  fe:	8c 93       	st	X, r24
 100:	bd c0       	rjmp	.+378    	; 0x27c <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTB: CLR_BIT(DDRB,Copy_u8Pin);break;
 102:	a7 e3       	ldi	r26, 0x37	; 55
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	e7 e3       	ldi	r30, 0x37	; 55
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	48 2f       	mov	r20, r24
 10e:	8b 81       	ldd	r24, Y+3	; 0x03
 110:	28 2f       	mov	r18, r24
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 2e       	mov	r0, r18
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_u8SetPinDirection+0xb4>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	0a 94       	dec	r0
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_u8SetPinDirection+0xb0>
 124:	80 95       	com	r24
 126:	84 23       	and	r24, r20
 128:	8c 93       	st	X, r24
 12a:	a8 c0       	rjmp	.+336    	; 0x27c <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTC: CLR_BIT(DDRC,Copy_u8Pin);break;
 12c:	a4 e3       	ldi	r26, 0x34	; 52
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	e4 e3       	ldi	r30, 0x34	; 52
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8b 81       	ldd	r24, Y+3	; 0x03
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_u8SetPinDirection+0xde>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_u8SetPinDirection+0xda>
 14e:	80 95       	com	r24
 150:	84 23       	and	r24, r20
 152:	8c 93       	st	X, r24
 154:	93 c0       	rjmp	.+294    	; 0x27c <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTD: CLR_BIT(DDRD,Copy_u8Pin);break;
 156:	a1 e3       	ldi	r26, 0x31	; 49
 158:	b0 e0       	ldi	r27, 0x00	; 0
 15a:	e1 e3       	ldi	r30, 0x31	; 49
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	48 2f       	mov	r20, r24
 162:	8b 81       	ldd	r24, Y+3	; 0x03
 164:	28 2f       	mov	r18, r24
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 2e       	mov	r0, r18
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_u8SetPinDirection+0x108>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	0a 94       	dec	r0
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_u8SetPinDirection+0x104>
 178:	80 95       	com	r24
 17a:	84 23       	and	r24, r20
 17c:	8c 93       	st	X, r24
 17e:	7e c0       	rjmp	.+252    	; 0x27c <DIO_u8SetPinDirection+0x210>
			default: Local_u8ErrorState=1;
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	89 83       	std	Y+1, r24	; 0x01
 184:	7b c0       	rjmp	.+246    	; 0x27c <DIO_u8SetPinDirection+0x210>
			}
		else if(Copy_u8Direction==DIO_u8PIN_OUTPUT)
 186:	8c 81       	ldd	r24, Y+4	; 0x04
 188:	81 30       	cpi	r24, 0x01	; 1
 18a:	09 f0       	breq	.+2      	; 0x18e <DIO_u8SetPinDirection+0x122>
 18c:	72 c0       	rjmp	.+228    	; 0x272 <DIO_u8SetPinDirection+0x206>
		{
			switch(Copy_u8Port)
 18e:	8a 81       	ldd	r24, Y+2	; 0x02
 190:	28 2f       	mov	r18, r24
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	3e 83       	std	Y+6, r19	; 0x06
 196:	2d 83       	std	Y+5, r18	; 0x05
 198:	8d 81       	ldd	r24, Y+5	; 0x05
 19a:	9e 81       	ldd	r25, Y+6	; 0x06
 19c:	81 30       	cpi	r24, 0x01	; 1
 19e:	91 05       	cpc	r25, r1
 1a0:	49 f1       	breq	.+82     	; 0x1f4 <DIO_u8SetPinDirection+0x188>
 1a2:	2d 81       	ldd	r18, Y+5	; 0x05
 1a4:	3e 81       	ldd	r19, Y+6	; 0x06
 1a6:	22 30       	cpi	r18, 0x02	; 2
 1a8:	31 05       	cpc	r19, r1
 1aa:	2c f4       	brge	.+10     	; 0x1b6 <DIO_u8SetPinDirection+0x14a>
 1ac:	8d 81       	ldd	r24, Y+5	; 0x05
 1ae:	9e 81       	ldd	r25, Y+6	; 0x06
 1b0:	00 97       	sbiw	r24, 0x00	; 0
 1b2:	61 f0       	breq	.+24     	; 0x1cc <DIO_u8SetPinDirection+0x160>
 1b4:	5b c0       	rjmp	.+182    	; 0x26c <DIO_u8SetPinDirection+0x200>
 1b6:	2d 81       	ldd	r18, Y+5	; 0x05
 1b8:	3e 81       	ldd	r19, Y+6	; 0x06
 1ba:	22 30       	cpi	r18, 0x02	; 2
 1bc:	31 05       	cpc	r19, r1
 1be:	71 f1       	breq	.+92     	; 0x21c <DIO_u8SetPinDirection+0x1b0>
 1c0:	8d 81       	ldd	r24, Y+5	; 0x05
 1c2:	9e 81       	ldd	r25, Y+6	; 0x06
 1c4:	83 30       	cpi	r24, 0x03	; 3
 1c6:	91 05       	cpc	r25, r1
 1c8:	e9 f1       	breq	.+122    	; 0x244 <DIO_u8SetPinDirection+0x1d8>
 1ca:	50 c0       	rjmp	.+160    	; 0x26c <DIO_u8SetPinDirection+0x200>
			{
			case DIO_u8PORTA: SET_BIT(DDRA,Copy_u8Pin);break;
 1cc:	aa e3       	ldi	r26, 0x3A	; 58
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	ea e3       	ldi	r30, 0x3A	; 58
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	48 2f       	mov	r20, r24
 1d8:	8b 81       	ldd	r24, Y+3	; 0x03
 1da:	28 2f       	mov	r18, r24
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	02 2e       	mov	r0, r18
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_u8SetPinDirection+0x17e>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	0a 94       	dec	r0
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_u8SetPinDirection+0x17a>
 1ee:	84 2b       	or	r24, r20
 1f0:	8c 93       	st	X, r24
 1f2:	44 c0       	rjmp	.+136    	; 0x27c <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTB: SET_BIT(DDRB,Copy_u8Pin);break;
 1f4:	a7 e3       	ldi	r26, 0x37	; 55
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	e7 e3       	ldi	r30, 0x37	; 55
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	48 2f       	mov	r20, r24
 200:	8b 81       	ldd	r24, Y+3	; 0x03
 202:	28 2f       	mov	r18, r24
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 2e       	mov	r0, r18
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_u8SetPinDirection+0x1a6>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	0a 94       	dec	r0
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_u8SetPinDirection+0x1a2>
 216:	84 2b       	or	r24, r20
 218:	8c 93       	st	X, r24
 21a:	30 c0       	rjmp	.+96     	; 0x27c <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTC: SET_BIT(DDRC,Copy_u8Pin);break;
 21c:	a4 e3       	ldi	r26, 0x34	; 52
 21e:	b0 e0       	ldi	r27, 0x00	; 0
 220:	e4 e3       	ldi	r30, 0x34	; 52
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	48 2f       	mov	r20, r24
 228:	8b 81       	ldd	r24, Y+3	; 0x03
 22a:	28 2f       	mov	r18, r24
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 2e       	mov	r0, r18
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_u8SetPinDirection+0x1ce>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	0a 94       	dec	r0
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_u8SetPinDirection+0x1ca>
 23e:	84 2b       	or	r24, r20
 240:	8c 93       	st	X, r24
 242:	1c c0       	rjmp	.+56     	; 0x27c <DIO_u8SetPinDirection+0x210>
			case DIO_u8PORTD: SET_BIT(DDRD,Copy_u8Pin);break;
 244:	a1 e3       	ldi	r26, 0x31	; 49
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	e1 e3       	ldi	r30, 0x31	; 49
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	80 81       	ld	r24, Z
 24e:	48 2f       	mov	r20, r24
 250:	8b 81       	ldd	r24, Y+3	; 0x03
 252:	28 2f       	mov	r18, r24
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	02 2e       	mov	r0, r18
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_u8SetPinDirection+0x1f6>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	0a 94       	dec	r0
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_u8SetPinDirection+0x1f2>
 266:	84 2b       	or	r24, r20
 268:	8c 93       	st	X, r24
 26a:	08 c0       	rjmp	.+16     	; 0x27c <DIO_u8SetPinDirection+0x210>
			default: Local_u8ErrorState=1;
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	89 83       	std	Y+1, r24	; 0x01
 270:	05 c0       	rjmp	.+10     	; 0x27c <DIO_u8SetPinDirection+0x210>
			}
		}
		else
		{
			Local_u8ErrorState=1;
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	89 83       	std	Y+1, r24	; 0x01
 276:	02 c0       	rjmp	.+4      	; 0x27c <DIO_u8SetPinDirection+0x210>
		}
	}
	else
	{
		Local_u8ErrorState=1;
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
 27c:	89 81       	ldd	r24, Y+1	; 0x01
}
 27e:	28 96       	adiw	r28, 0x08	; 8
 280:	0f b6       	in	r0, 0x3f	; 63
 282:	f8 94       	cli
 284:	de bf       	out	0x3e, r29	; 62
 286:	0f be       	out	0x3f, r0	; 63
 288:	cd bf       	out	0x3d, r28	; 61
 28a:	cf 91       	pop	r28
 28c:	df 91       	pop	r29
 28e:	08 95       	ret

00000290 <DIO_u8SetPortDirection>:

u8 DIO_u8SetPortDirection(u8 Copy_u8Port, u8 Copy_u8Direction)
{
 290:	df 93       	push	r29
 292:	cf 93       	push	r28
 294:	00 d0       	rcall	.+0      	; 0x296 <DIO_u8SetPortDirection+0x6>
 296:	00 d0       	rcall	.+0      	; 0x298 <DIO_u8SetPortDirection+0x8>
 298:	0f 92       	push	r0
 29a:	cd b7       	in	r28, 0x3d	; 61
 29c:	de b7       	in	r29, 0x3e	; 62
 29e:	8a 83       	std	Y+2, r24	; 0x02
 2a0:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
 2a2:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
 2a4:	8a 81       	ldd	r24, Y+2	; 0x02
 2a6:	28 2f       	mov	r18, r24
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	3d 83       	std	Y+5, r19	; 0x05
 2ac:	2c 83       	std	Y+4, r18	; 0x04
 2ae:	8c 81       	ldd	r24, Y+4	; 0x04
 2b0:	9d 81       	ldd	r25, Y+5	; 0x05
 2b2:	81 30       	cpi	r24, 0x01	; 1
 2b4:	91 05       	cpc	r25, r1
 2b6:	d1 f0       	breq	.+52     	; 0x2ec <DIO_u8SetPortDirection+0x5c>
 2b8:	2c 81       	ldd	r18, Y+4	; 0x04
 2ba:	3d 81       	ldd	r19, Y+5	; 0x05
 2bc:	22 30       	cpi	r18, 0x02	; 2
 2be:	31 05       	cpc	r19, r1
 2c0:	2c f4       	brge	.+10     	; 0x2cc <DIO_u8SetPortDirection+0x3c>
 2c2:	8c 81       	ldd	r24, Y+4	; 0x04
 2c4:	9d 81       	ldd	r25, Y+5	; 0x05
 2c6:	00 97       	sbiw	r24, 0x00	; 0
 2c8:	61 f0       	breq	.+24     	; 0x2e2 <DIO_u8SetPortDirection+0x52>
 2ca:	1f c0       	rjmp	.+62     	; 0x30a <DIO_u8SetPortDirection+0x7a>
 2cc:	2c 81       	ldd	r18, Y+4	; 0x04
 2ce:	3d 81       	ldd	r19, Y+5	; 0x05
 2d0:	22 30       	cpi	r18, 0x02	; 2
 2d2:	31 05       	cpc	r19, r1
 2d4:	81 f0       	breq	.+32     	; 0x2f6 <DIO_u8SetPortDirection+0x66>
 2d6:	8c 81       	ldd	r24, Y+4	; 0x04
 2d8:	9d 81       	ldd	r25, Y+5	; 0x05
 2da:	83 30       	cpi	r24, 0x03	; 3
 2dc:	91 05       	cpc	r25, r1
 2de:	81 f0       	breq	.+32     	; 0x300 <DIO_u8SetPortDirection+0x70>
 2e0:	14 c0       	rjmp	.+40     	; 0x30a <DIO_u8SetPortDirection+0x7a>
	{
	case DIO_u8PORTA: DDRA=Copy_u8Direction;break;
 2e2:	ea e3       	ldi	r30, 0x3A	; 58
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	8b 81       	ldd	r24, Y+3	; 0x03
 2e8:	80 83       	st	Z, r24
 2ea:	11 c0       	rjmp	.+34     	; 0x30e <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTB: DDRB=Copy_u8Direction;break;
 2ec:	e7 e3       	ldi	r30, 0x37	; 55
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	8b 81       	ldd	r24, Y+3	; 0x03
 2f2:	80 83       	st	Z, r24
 2f4:	0c c0       	rjmp	.+24     	; 0x30e <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTC: DDRC=Copy_u8Direction;break;
 2f6:	e4 e3       	ldi	r30, 0x34	; 52
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	8b 81       	ldd	r24, Y+3	; 0x03
 2fc:	80 83       	st	Z, r24
 2fe:	07 c0       	rjmp	.+14     	; 0x30e <DIO_u8SetPortDirection+0x7e>
	case DIO_u8PORTD: DDRD=Copy_u8Direction;break;
 300:	e1 e3       	ldi	r30, 0x31	; 49
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	8b 81       	ldd	r24, Y+3	; 0x03
 306:	80 83       	st	Z, r24
 308:	02 c0       	rjmp	.+4      	; 0x30e <DIO_u8SetPortDirection+0x7e>
	default: Local_u8ErrorState=1;
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
 30e:	89 81       	ldd	r24, Y+1	; 0x01
}
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
 314:	0f 90       	pop	r0
 316:	0f 90       	pop	r0
 318:	0f 90       	pop	r0
 31a:	cf 91       	pop	r28
 31c:	df 91       	pop	r29
 31e:	08 95       	ret

00000320 <DIO_u8SetPinValue>:

u8 DIO_u8SetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Value)
{
 320:	df 93       	push	r29
 322:	cf 93       	push	r28
 324:	cd b7       	in	r28, 0x3d	; 61
 326:	de b7       	in	r29, 0x3e	; 62
 328:	28 97       	sbiw	r28, 0x08	; 8
 32a:	0f b6       	in	r0, 0x3f	; 63
 32c:	f8 94       	cli
 32e:	de bf       	out	0x3e, r29	; 62
 330:	0f be       	out	0x3f, r0	; 63
 332:	cd bf       	out	0x3d, r28	; 61
 334:	8a 83       	std	Y+2, r24	; 0x02
 336:	6b 83       	std	Y+3, r22	; 0x03
 338:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
 33a:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8Pin<= DIO_u8PIN7)
 33c:	8b 81       	ldd	r24, Y+3	; 0x03
 33e:	88 30       	cpi	r24, 0x08	; 8
 340:	08 f0       	brcs	.+2      	; 0x344 <DIO_u8SetPinValue+0x24>
 342:	f4 c0       	rjmp	.+488    	; 0x52c <DIO_u8SetPinValue+0x20c>
	{
		if(Copy_u8Value==DIO_u8PIN_LOW)
 344:	8c 81       	ldd	r24, Y+4	; 0x04
 346:	88 23       	and	r24, r24
 348:	09 f0       	breq	.+2      	; 0x34c <DIO_u8SetPinValue+0x2c>
 34a:	77 c0       	rjmp	.+238    	; 0x43a <DIO_u8SetPinValue+0x11a>
			switch(Copy_u8Port)
 34c:	8a 81       	ldd	r24, Y+2	; 0x02
 34e:	28 2f       	mov	r18, r24
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	38 87       	std	Y+8, r19	; 0x08
 354:	2f 83       	std	Y+7, r18	; 0x07
 356:	8f 81       	ldd	r24, Y+7	; 0x07
 358:	98 85       	ldd	r25, Y+8	; 0x08
 35a:	81 30       	cpi	r24, 0x01	; 1
 35c:	91 05       	cpc	r25, r1
 35e:	59 f1       	breq	.+86     	; 0x3b6 <DIO_u8SetPinValue+0x96>
 360:	2f 81       	ldd	r18, Y+7	; 0x07
 362:	38 85       	ldd	r19, Y+8	; 0x08
 364:	22 30       	cpi	r18, 0x02	; 2
 366:	31 05       	cpc	r19, r1
 368:	2c f4       	brge	.+10     	; 0x374 <DIO_u8SetPinValue+0x54>
 36a:	8f 81       	ldd	r24, Y+7	; 0x07
 36c:	98 85       	ldd	r25, Y+8	; 0x08
 36e:	00 97       	sbiw	r24, 0x00	; 0
 370:	69 f0       	breq	.+26     	; 0x38c <DIO_u8SetPinValue+0x6c>
 372:	60 c0       	rjmp	.+192    	; 0x434 <DIO_u8SetPinValue+0x114>
 374:	2f 81       	ldd	r18, Y+7	; 0x07
 376:	38 85       	ldd	r19, Y+8	; 0x08
 378:	22 30       	cpi	r18, 0x02	; 2
 37a:	31 05       	cpc	r19, r1
 37c:	89 f1       	breq	.+98     	; 0x3e0 <DIO_u8SetPinValue+0xc0>
 37e:	8f 81       	ldd	r24, Y+7	; 0x07
 380:	98 85       	ldd	r25, Y+8	; 0x08
 382:	83 30       	cpi	r24, 0x03	; 3
 384:	91 05       	cpc	r25, r1
 386:	09 f4       	brne	.+2      	; 0x38a <DIO_u8SetPinValue+0x6a>
 388:	40 c0       	rjmp	.+128    	; 0x40a <DIO_u8SetPinValue+0xea>
 38a:	54 c0       	rjmp	.+168    	; 0x434 <DIO_u8SetPinValue+0x114>
			{
			case DIO_u8PORTA: CLR_BIT(PORTA,Copy_u8Pin);break;
 38c:	ab e3       	ldi	r26, 0x3B	; 59
 38e:	b0 e0       	ldi	r27, 0x00	; 0
 390:	eb e3       	ldi	r30, 0x3B	; 59
 392:	f0 e0       	ldi	r31, 0x00	; 0
 394:	80 81       	ld	r24, Z
 396:	48 2f       	mov	r20, r24
 398:	8b 81       	ldd	r24, Y+3	; 0x03
 39a:	28 2f       	mov	r18, r24
 39c:	30 e0       	ldi	r19, 0x00	; 0
 39e:	81 e0       	ldi	r24, 0x01	; 1
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	02 2e       	mov	r0, r18
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <DIO_u8SetPinValue+0x8a>
 3a6:	88 0f       	add	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	0a 94       	dec	r0
 3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <DIO_u8SetPinValue+0x86>
 3ae:	80 95       	com	r24
 3b0:	84 23       	and	r24, r20
 3b2:	8c 93       	st	X, r24
 3b4:	bd c0       	rjmp	.+378    	; 0x530 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB: CLR_BIT(PORTB,Copy_u8Pin);break;
 3b6:	a8 e3       	ldi	r26, 0x38	; 56
 3b8:	b0 e0       	ldi	r27, 0x00	; 0
 3ba:	e8 e3       	ldi	r30, 0x38	; 56
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	80 81       	ld	r24, Z
 3c0:	48 2f       	mov	r20, r24
 3c2:	8b 81       	ldd	r24, Y+3	; 0x03
 3c4:	28 2f       	mov	r18, r24
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	02 2e       	mov	r0, r18
 3ce:	02 c0       	rjmp	.+4      	; 0x3d4 <DIO_u8SetPinValue+0xb4>
 3d0:	88 0f       	add	r24, r24
 3d2:	99 1f       	adc	r25, r25
 3d4:	0a 94       	dec	r0
 3d6:	e2 f7       	brpl	.-8      	; 0x3d0 <DIO_u8SetPinValue+0xb0>
 3d8:	80 95       	com	r24
 3da:	84 23       	and	r24, r20
 3dc:	8c 93       	st	X, r24
 3de:	a8 c0       	rjmp	.+336    	; 0x530 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC: CLR_BIT(PORTC,Copy_u8Pin);break;
 3e0:	a5 e3       	ldi	r26, 0x35	; 53
 3e2:	b0 e0       	ldi	r27, 0x00	; 0
 3e4:	e5 e3       	ldi	r30, 0x35	; 53
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	48 2f       	mov	r20, r24
 3ec:	8b 81       	ldd	r24, Y+3	; 0x03
 3ee:	28 2f       	mov	r18, r24
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	81 e0       	ldi	r24, 0x01	; 1
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	02 2e       	mov	r0, r18
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <DIO_u8SetPinValue+0xde>
 3fa:	88 0f       	add	r24, r24
 3fc:	99 1f       	adc	r25, r25
 3fe:	0a 94       	dec	r0
 400:	e2 f7       	brpl	.-8      	; 0x3fa <DIO_u8SetPinValue+0xda>
 402:	80 95       	com	r24
 404:	84 23       	and	r24, r20
 406:	8c 93       	st	X, r24
 408:	93 c0       	rjmp	.+294    	; 0x530 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD: CLR_BIT(PORTD,Copy_u8Pin);break;
 40a:	a2 e3       	ldi	r26, 0x32	; 50
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	e2 e3       	ldi	r30, 0x32	; 50
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	80 81       	ld	r24, Z
 414:	48 2f       	mov	r20, r24
 416:	8b 81       	ldd	r24, Y+3	; 0x03
 418:	28 2f       	mov	r18, r24
 41a:	30 e0       	ldi	r19, 0x00	; 0
 41c:	81 e0       	ldi	r24, 0x01	; 1
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	02 2e       	mov	r0, r18
 422:	02 c0       	rjmp	.+4      	; 0x428 <DIO_u8SetPinValue+0x108>
 424:	88 0f       	add	r24, r24
 426:	99 1f       	adc	r25, r25
 428:	0a 94       	dec	r0
 42a:	e2 f7       	brpl	.-8      	; 0x424 <DIO_u8SetPinValue+0x104>
 42c:	80 95       	com	r24
 42e:	84 23       	and	r24, r20
 430:	8c 93       	st	X, r24
 432:	7e c0       	rjmp	.+252    	; 0x530 <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=1;
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	89 83       	std	Y+1, r24	; 0x01
 438:	7b c0       	rjmp	.+246    	; 0x530 <DIO_u8SetPinValue+0x210>
			}
		else if(Copy_u8Value==DIO_u8PIN_HIGH)
 43a:	8c 81       	ldd	r24, Y+4	; 0x04
 43c:	81 30       	cpi	r24, 0x01	; 1
 43e:	09 f0       	breq	.+2      	; 0x442 <DIO_u8SetPinValue+0x122>
 440:	72 c0       	rjmp	.+228    	; 0x526 <DIO_u8SetPinValue+0x206>
		{
			switch(Copy_u8Port)
 442:	8a 81       	ldd	r24, Y+2	; 0x02
 444:	28 2f       	mov	r18, r24
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	3e 83       	std	Y+6, r19	; 0x06
 44a:	2d 83       	std	Y+5, r18	; 0x05
 44c:	8d 81       	ldd	r24, Y+5	; 0x05
 44e:	9e 81       	ldd	r25, Y+6	; 0x06
 450:	81 30       	cpi	r24, 0x01	; 1
 452:	91 05       	cpc	r25, r1
 454:	49 f1       	breq	.+82     	; 0x4a8 <DIO_u8SetPinValue+0x188>
 456:	2d 81       	ldd	r18, Y+5	; 0x05
 458:	3e 81       	ldd	r19, Y+6	; 0x06
 45a:	22 30       	cpi	r18, 0x02	; 2
 45c:	31 05       	cpc	r19, r1
 45e:	2c f4       	brge	.+10     	; 0x46a <DIO_u8SetPinValue+0x14a>
 460:	8d 81       	ldd	r24, Y+5	; 0x05
 462:	9e 81       	ldd	r25, Y+6	; 0x06
 464:	00 97       	sbiw	r24, 0x00	; 0
 466:	61 f0       	breq	.+24     	; 0x480 <DIO_u8SetPinValue+0x160>
 468:	5b c0       	rjmp	.+182    	; 0x520 <DIO_u8SetPinValue+0x200>
 46a:	2d 81       	ldd	r18, Y+5	; 0x05
 46c:	3e 81       	ldd	r19, Y+6	; 0x06
 46e:	22 30       	cpi	r18, 0x02	; 2
 470:	31 05       	cpc	r19, r1
 472:	71 f1       	breq	.+92     	; 0x4d0 <DIO_u8SetPinValue+0x1b0>
 474:	8d 81       	ldd	r24, Y+5	; 0x05
 476:	9e 81       	ldd	r25, Y+6	; 0x06
 478:	83 30       	cpi	r24, 0x03	; 3
 47a:	91 05       	cpc	r25, r1
 47c:	e9 f1       	breq	.+122    	; 0x4f8 <DIO_u8SetPinValue+0x1d8>
 47e:	50 c0       	rjmp	.+160    	; 0x520 <DIO_u8SetPinValue+0x200>
			{
			case DIO_u8PORTA: SET_BIT(PORTA,Copy_u8Pin);break;
 480:	ab e3       	ldi	r26, 0x3B	; 59
 482:	b0 e0       	ldi	r27, 0x00	; 0
 484:	eb e3       	ldi	r30, 0x3B	; 59
 486:	f0 e0       	ldi	r31, 0x00	; 0
 488:	80 81       	ld	r24, Z
 48a:	48 2f       	mov	r20, r24
 48c:	8b 81       	ldd	r24, Y+3	; 0x03
 48e:	28 2f       	mov	r18, r24
 490:	30 e0       	ldi	r19, 0x00	; 0
 492:	81 e0       	ldi	r24, 0x01	; 1
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	02 2e       	mov	r0, r18
 498:	02 c0       	rjmp	.+4      	; 0x49e <DIO_u8SetPinValue+0x17e>
 49a:	88 0f       	add	r24, r24
 49c:	99 1f       	adc	r25, r25
 49e:	0a 94       	dec	r0
 4a0:	e2 f7       	brpl	.-8      	; 0x49a <DIO_u8SetPinValue+0x17a>
 4a2:	84 2b       	or	r24, r20
 4a4:	8c 93       	st	X, r24
 4a6:	44 c0       	rjmp	.+136    	; 0x530 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB: SET_BIT(PORTB,Copy_u8Pin);break;
 4a8:	a8 e3       	ldi	r26, 0x38	; 56
 4aa:	b0 e0       	ldi	r27, 0x00	; 0
 4ac:	e8 e3       	ldi	r30, 0x38	; 56
 4ae:	f0 e0       	ldi	r31, 0x00	; 0
 4b0:	80 81       	ld	r24, Z
 4b2:	48 2f       	mov	r20, r24
 4b4:	8b 81       	ldd	r24, Y+3	; 0x03
 4b6:	28 2f       	mov	r18, r24
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	81 e0       	ldi	r24, 0x01	; 1
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	02 2e       	mov	r0, r18
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <DIO_u8SetPinValue+0x1a6>
 4c2:	88 0f       	add	r24, r24
 4c4:	99 1f       	adc	r25, r25
 4c6:	0a 94       	dec	r0
 4c8:	e2 f7       	brpl	.-8      	; 0x4c2 <DIO_u8SetPinValue+0x1a2>
 4ca:	84 2b       	or	r24, r20
 4cc:	8c 93       	st	X, r24
 4ce:	30 c0       	rjmp	.+96     	; 0x530 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC: SET_BIT(PORTC,Copy_u8Pin);break;
 4d0:	a5 e3       	ldi	r26, 0x35	; 53
 4d2:	b0 e0       	ldi	r27, 0x00	; 0
 4d4:	e5 e3       	ldi	r30, 0x35	; 53
 4d6:	f0 e0       	ldi	r31, 0x00	; 0
 4d8:	80 81       	ld	r24, Z
 4da:	48 2f       	mov	r20, r24
 4dc:	8b 81       	ldd	r24, Y+3	; 0x03
 4de:	28 2f       	mov	r18, r24
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	81 e0       	ldi	r24, 0x01	; 1
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	02 2e       	mov	r0, r18
 4e8:	02 c0       	rjmp	.+4      	; 0x4ee <DIO_u8SetPinValue+0x1ce>
 4ea:	88 0f       	add	r24, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	0a 94       	dec	r0
 4f0:	e2 f7       	brpl	.-8      	; 0x4ea <DIO_u8SetPinValue+0x1ca>
 4f2:	84 2b       	or	r24, r20
 4f4:	8c 93       	st	X, r24
 4f6:	1c c0       	rjmp	.+56     	; 0x530 <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD: SET_BIT(PORTD,Copy_u8Pin);break;
 4f8:	a2 e3       	ldi	r26, 0x32	; 50
 4fa:	b0 e0       	ldi	r27, 0x00	; 0
 4fc:	e2 e3       	ldi	r30, 0x32	; 50
 4fe:	f0 e0       	ldi	r31, 0x00	; 0
 500:	80 81       	ld	r24, Z
 502:	48 2f       	mov	r20, r24
 504:	8b 81       	ldd	r24, Y+3	; 0x03
 506:	28 2f       	mov	r18, r24
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	81 e0       	ldi	r24, 0x01	; 1
 50c:	90 e0       	ldi	r25, 0x00	; 0
 50e:	02 2e       	mov	r0, r18
 510:	02 c0       	rjmp	.+4      	; 0x516 <DIO_u8SetPinValue+0x1f6>
 512:	88 0f       	add	r24, r24
 514:	99 1f       	adc	r25, r25
 516:	0a 94       	dec	r0
 518:	e2 f7       	brpl	.-8      	; 0x512 <DIO_u8SetPinValue+0x1f2>
 51a:	84 2b       	or	r24, r20
 51c:	8c 93       	st	X, r24
 51e:	08 c0       	rjmp	.+16     	; 0x530 <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=1;
 520:	81 e0       	ldi	r24, 0x01	; 1
 522:	89 83       	std	Y+1, r24	; 0x01
 524:	05 c0       	rjmp	.+10     	; 0x530 <DIO_u8SetPinValue+0x210>
			}
		}
		else
		{
			Local_u8ErrorState=1;
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	89 83       	std	Y+1, r24	; 0x01
 52a:	02 c0       	rjmp	.+4      	; 0x530 <DIO_u8SetPinValue+0x210>
		}
	}
	else
	{
		Local_u8ErrorState=1;
 52c:	81 e0       	ldi	r24, 0x01	; 1
 52e:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
 530:	89 81       	ldd	r24, Y+1	; 0x01
}
 532:	28 96       	adiw	r28, 0x08	; 8
 534:	0f b6       	in	r0, 0x3f	; 63
 536:	f8 94       	cli
 538:	de bf       	out	0x3e, r29	; 62
 53a:	0f be       	out	0x3f, r0	; 63
 53c:	cd bf       	out	0x3d, r28	; 61
 53e:	cf 91       	pop	r28
 540:	df 91       	pop	r29
 542:	08 95       	ret

00000544 <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 Copy_u8Port, u8 Copy_u8Value)
{
 544:	df 93       	push	r29
 546:	cf 93       	push	r28
 548:	00 d0       	rcall	.+0      	; 0x54a <DIO_u8SetPortValue+0x6>
 54a:	00 d0       	rcall	.+0      	; 0x54c <DIO_u8SetPortValue+0x8>
 54c:	0f 92       	push	r0
 54e:	cd b7       	in	r28, 0x3d	; 61
 550:	de b7       	in	r29, 0x3e	; 62
 552:	8a 83       	std	Y+2, r24	; 0x02
 554:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
 556:	19 82       	std	Y+1, r1	; 0x01
	switch(Copy_u8Port)
 558:	8a 81       	ldd	r24, Y+2	; 0x02
 55a:	28 2f       	mov	r18, r24
 55c:	30 e0       	ldi	r19, 0x00	; 0
 55e:	3d 83       	std	Y+5, r19	; 0x05
 560:	2c 83       	std	Y+4, r18	; 0x04
 562:	8c 81       	ldd	r24, Y+4	; 0x04
 564:	9d 81       	ldd	r25, Y+5	; 0x05
 566:	81 30       	cpi	r24, 0x01	; 1
 568:	91 05       	cpc	r25, r1
 56a:	d1 f0       	breq	.+52     	; 0x5a0 <DIO_u8SetPortValue+0x5c>
 56c:	2c 81       	ldd	r18, Y+4	; 0x04
 56e:	3d 81       	ldd	r19, Y+5	; 0x05
 570:	22 30       	cpi	r18, 0x02	; 2
 572:	31 05       	cpc	r19, r1
 574:	2c f4       	brge	.+10     	; 0x580 <DIO_u8SetPortValue+0x3c>
 576:	8c 81       	ldd	r24, Y+4	; 0x04
 578:	9d 81       	ldd	r25, Y+5	; 0x05
 57a:	00 97       	sbiw	r24, 0x00	; 0
 57c:	61 f0       	breq	.+24     	; 0x596 <DIO_u8SetPortValue+0x52>
 57e:	1f c0       	rjmp	.+62     	; 0x5be <DIO_u8SetPortValue+0x7a>
 580:	2c 81       	ldd	r18, Y+4	; 0x04
 582:	3d 81       	ldd	r19, Y+5	; 0x05
 584:	22 30       	cpi	r18, 0x02	; 2
 586:	31 05       	cpc	r19, r1
 588:	81 f0       	breq	.+32     	; 0x5aa <DIO_u8SetPortValue+0x66>
 58a:	8c 81       	ldd	r24, Y+4	; 0x04
 58c:	9d 81       	ldd	r25, Y+5	; 0x05
 58e:	83 30       	cpi	r24, 0x03	; 3
 590:	91 05       	cpc	r25, r1
 592:	81 f0       	breq	.+32     	; 0x5b4 <DIO_u8SetPortValue+0x70>
 594:	14 c0       	rjmp	.+40     	; 0x5be <DIO_u8SetPortValue+0x7a>
	{
	case DIO_u8PORTA: PORTA=Copy_u8Value;break;
 596:	eb e3       	ldi	r30, 0x3B	; 59
 598:	f0 e0       	ldi	r31, 0x00	; 0
 59a:	8b 81       	ldd	r24, Y+3	; 0x03
 59c:	80 83       	st	Z, r24
 59e:	11 c0       	rjmp	.+34     	; 0x5c2 <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTB: PORTB=Copy_u8Value;break;
 5a0:	e8 e3       	ldi	r30, 0x38	; 56
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	8b 81       	ldd	r24, Y+3	; 0x03
 5a6:	80 83       	st	Z, r24
 5a8:	0c c0       	rjmp	.+24     	; 0x5c2 <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTC: PORTC=Copy_u8Value;break;
 5aa:	e5 e3       	ldi	r30, 0x35	; 53
 5ac:	f0 e0       	ldi	r31, 0x00	; 0
 5ae:	8b 81       	ldd	r24, Y+3	; 0x03
 5b0:	80 83       	st	Z, r24
 5b2:	07 c0       	rjmp	.+14     	; 0x5c2 <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTD: PORTD=Copy_u8Value;break;
 5b4:	e2 e3       	ldi	r30, 0x32	; 50
 5b6:	f0 e0       	ldi	r31, 0x00	; 0
 5b8:	8b 81       	ldd	r24, Y+3	; 0x03
 5ba:	80 83       	st	Z, r24
 5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <DIO_u8SetPortValue+0x7e>
	default: Local_u8ErrorState=1;
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
 5c2:	89 81       	ldd	r24, Y+1	; 0x01
}
 5c4:	0f 90       	pop	r0
 5c6:	0f 90       	pop	r0
 5c8:	0f 90       	pop	r0
 5ca:	0f 90       	pop	r0
 5cc:	0f 90       	pop	r0
 5ce:	cf 91       	pop	r28
 5d0:	df 91       	pop	r29
 5d2:	08 95       	ret

000005d4 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8* Copy_pu8Value)
{
 5d4:	df 93       	push	r29
 5d6:	cf 93       	push	r28
 5d8:	cd b7       	in	r28, 0x3d	; 61
 5da:	de b7       	in	r29, 0x3e	; 62
 5dc:	27 97       	sbiw	r28, 0x07	; 7
 5de:	0f b6       	in	r0, 0x3f	; 63
 5e0:	f8 94       	cli
 5e2:	de bf       	out	0x3e, r29	; 62
 5e4:	0f be       	out	0x3f, r0	; 63
 5e6:	cd bf       	out	0x3d, r28	; 61
 5e8:	8a 83       	std	Y+2, r24	; 0x02
 5ea:	6b 83       	std	Y+3, r22	; 0x03
 5ec:	5d 83       	std	Y+5, r21	; 0x05
 5ee:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
 5f0:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_pu8Value!=0) && (Copy_u8Pin<=DIO_u8PIN7))
 5f2:	8c 81       	ldd	r24, Y+4	; 0x04
 5f4:	9d 81       	ldd	r25, Y+5	; 0x05
 5f6:	00 97       	sbiw	r24, 0x00	; 0
 5f8:	09 f4       	brne	.+2      	; 0x5fc <DIO_u8GetPinValue+0x28>
 5fa:	78 c0       	rjmp	.+240    	; 0x6ec <DIO_u8GetPinValue+0x118>
 5fc:	8b 81       	ldd	r24, Y+3	; 0x03
 5fe:	88 30       	cpi	r24, 0x08	; 8
 600:	08 f0       	brcs	.+2      	; 0x604 <DIO_u8GetPinValue+0x30>
 602:	74 c0       	rjmp	.+232    	; 0x6ec <DIO_u8GetPinValue+0x118>
		{
			switch(Copy_u8Port)
 604:	8a 81       	ldd	r24, Y+2	; 0x02
 606:	28 2f       	mov	r18, r24
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	3f 83       	std	Y+7, r19	; 0x07
 60c:	2e 83       	std	Y+6, r18	; 0x06
 60e:	4e 81       	ldd	r20, Y+6	; 0x06
 610:	5f 81       	ldd	r21, Y+7	; 0x07
 612:	41 30       	cpi	r20, 0x01	; 1
 614:	51 05       	cpc	r21, r1
 616:	59 f1       	breq	.+86     	; 0x66e <DIO_u8GetPinValue+0x9a>
 618:	8e 81       	ldd	r24, Y+6	; 0x06
 61a:	9f 81       	ldd	r25, Y+7	; 0x07
 61c:	82 30       	cpi	r24, 0x02	; 2
 61e:	91 05       	cpc	r25, r1
 620:	34 f4       	brge	.+12     	; 0x62e <DIO_u8GetPinValue+0x5a>
 622:	2e 81       	ldd	r18, Y+6	; 0x06
 624:	3f 81       	ldd	r19, Y+7	; 0x07
 626:	21 15       	cp	r18, r1
 628:	31 05       	cpc	r19, r1
 62a:	69 f0       	breq	.+26     	; 0x646 <DIO_u8GetPinValue+0x72>
 62c:	5c c0       	rjmp	.+184    	; 0x6e6 <DIO_u8GetPinValue+0x112>
 62e:	4e 81       	ldd	r20, Y+6	; 0x06
 630:	5f 81       	ldd	r21, Y+7	; 0x07
 632:	42 30       	cpi	r20, 0x02	; 2
 634:	51 05       	cpc	r21, r1
 636:	79 f1       	breq	.+94     	; 0x696 <DIO_u8GetPinValue+0xc2>
 638:	8e 81       	ldd	r24, Y+6	; 0x06
 63a:	9f 81       	ldd	r25, Y+7	; 0x07
 63c:	83 30       	cpi	r24, 0x03	; 3
 63e:	91 05       	cpc	r25, r1
 640:	09 f4       	brne	.+2      	; 0x644 <DIO_u8GetPinValue+0x70>
 642:	3d c0       	rjmp	.+122    	; 0x6be <DIO_u8GetPinValue+0xea>
 644:	50 c0       	rjmp	.+160    	; 0x6e6 <DIO_u8GetPinValue+0x112>
			{
			case DIO_u8PORTA: *Copy_pu8Value=GET_BIT(PINA,Copy_u8Pin);break;
 646:	e9 e3       	ldi	r30, 0x39	; 57
 648:	f0 e0       	ldi	r31, 0x00	; 0
 64a:	80 81       	ld	r24, Z
 64c:	28 2f       	mov	r18, r24
 64e:	30 e0       	ldi	r19, 0x00	; 0
 650:	8b 81       	ldd	r24, Y+3	; 0x03
 652:	88 2f       	mov	r24, r24
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	a9 01       	movw	r20, r18
 658:	02 c0       	rjmp	.+4      	; 0x65e <DIO_u8GetPinValue+0x8a>
 65a:	55 95       	asr	r21
 65c:	47 95       	ror	r20
 65e:	8a 95       	dec	r24
 660:	e2 f7       	brpl	.-8      	; 0x65a <DIO_u8GetPinValue+0x86>
 662:	ca 01       	movw	r24, r20
 664:	81 70       	andi	r24, 0x01	; 1
 666:	ec 81       	ldd	r30, Y+4	; 0x04
 668:	fd 81       	ldd	r31, Y+5	; 0x05
 66a:	80 83       	st	Z, r24
 66c:	41 c0       	rjmp	.+130    	; 0x6f0 <DIO_u8GetPinValue+0x11c>
			case DIO_u8PORTB: *Copy_pu8Value=GET_BIT(PINB,Copy_u8Pin);break;
 66e:	e6 e3       	ldi	r30, 0x36	; 54
 670:	f0 e0       	ldi	r31, 0x00	; 0
 672:	80 81       	ld	r24, Z
 674:	28 2f       	mov	r18, r24
 676:	30 e0       	ldi	r19, 0x00	; 0
 678:	8b 81       	ldd	r24, Y+3	; 0x03
 67a:	88 2f       	mov	r24, r24
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	a9 01       	movw	r20, r18
 680:	02 c0       	rjmp	.+4      	; 0x686 <DIO_u8GetPinValue+0xb2>
 682:	55 95       	asr	r21
 684:	47 95       	ror	r20
 686:	8a 95       	dec	r24
 688:	e2 f7       	brpl	.-8      	; 0x682 <DIO_u8GetPinValue+0xae>
 68a:	ca 01       	movw	r24, r20
 68c:	81 70       	andi	r24, 0x01	; 1
 68e:	ec 81       	ldd	r30, Y+4	; 0x04
 690:	fd 81       	ldd	r31, Y+5	; 0x05
 692:	80 83       	st	Z, r24
 694:	2d c0       	rjmp	.+90     	; 0x6f0 <DIO_u8GetPinValue+0x11c>
			case DIO_u8PORTC: *Copy_pu8Value=GET_BIT(PINC,Copy_u8Pin);break;
 696:	e3 e3       	ldi	r30, 0x33	; 51
 698:	f0 e0       	ldi	r31, 0x00	; 0
 69a:	80 81       	ld	r24, Z
 69c:	28 2f       	mov	r18, r24
 69e:	30 e0       	ldi	r19, 0x00	; 0
 6a0:	8b 81       	ldd	r24, Y+3	; 0x03
 6a2:	88 2f       	mov	r24, r24
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	a9 01       	movw	r20, r18
 6a8:	02 c0       	rjmp	.+4      	; 0x6ae <DIO_u8GetPinValue+0xda>
 6aa:	55 95       	asr	r21
 6ac:	47 95       	ror	r20
 6ae:	8a 95       	dec	r24
 6b0:	e2 f7       	brpl	.-8      	; 0x6aa <DIO_u8GetPinValue+0xd6>
 6b2:	ca 01       	movw	r24, r20
 6b4:	81 70       	andi	r24, 0x01	; 1
 6b6:	ec 81       	ldd	r30, Y+4	; 0x04
 6b8:	fd 81       	ldd	r31, Y+5	; 0x05
 6ba:	80 83       	st	Z, r24
 6bc:	19 c0       	rjmp	.+50     	; 0x6f0 <DIO_u8GetPinValue+0x11c>
			case DIO_u8PORTD: *Copy_pu8Value=GET_BIT(PIND,Copy_u8Pin);break;
 6be:	e0 e3       	ldi	r30, 0x30	; 48
 6c0:	f0 e0       	ldi	r31, 0x00	; 0
 6c2:	80 81       	ld	r24, Z
 6c4:	28 2f       	mov	r18, r24
 6c6:	30 e0       	ldi	r19, 0x00	; 0
 6c8:	8b 81       	ldd	r24, Y+3	; 0x03
 6ca:	88 2f       	mov	r24, r24
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	a9 01       	movw	r20, r18
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <DIO_u8GetPinValue+0x102>
 6d2:	55 95       	asr	r21
 6d4:	47 95       	ror	r20
 6d6:	8a 95       	dec	r24
 6d8:	e2 f7       	brpl	.-8      	; 0x6d2 <DIO_u8GetPinValue+0xfe>
 6da:	ca 01       	movw	r24, r20
 6dc:	81 70       	andi	r24, 0x01	; 1
 6de:	ec 81       	ldd	r30, Y+4	; 0x04
 6e0:	fd 81       	ldd	r31, Y+5	; 0x05
 6e2:	80 83       	st	Z, r24
 6e4:	05 c0       	rjmp	.+10     	; 0x6f0 <DIO_u8GetPinValue+0x11c>
			default: Local_u8ErrorState=1;
 6e6:	81 e0       	ldi	r24, 0x01	; 1
 6e8:	89 83       	std	Y+1, r24	; 0x01
 6ea:	02 c0       	rjmp	.+4      	; 0x6f0 <DIO_u8GetPinValue+0x11c>
			}
		}
	else
	{
		Local_u8ErrorState=1;
 6ec:	81 e0       	ldi	r24, 0x01	; 1
 6ee:	89 83       	std	Y+1, r24	; 0x01
	}
		return Local_u8ErrorState;
 6f0:	89 81       	ldd	r24, Y+1	; 0x01
}
 6f2:	27 96       	adiw	r28, 0x07	; 7
 6f4:	0f b6       	in	r0, 0x3f	; 63
 6f6:	f8 94       	cli
 6f8:	de bf       	out	0x3e, r29	; 62
 6fa:	0f be       	out	0x3f, r0	; 63
 6fc:	cd bf       	out	0x3d, r28	; 61
 6fe:	cf 91       	pop	r28
 700:	df 91       	pop	r29
 702:	08 95       	ret

00000704 <EXTI_voidInt0Init>:
#include "EXTI_private.h"
#include "EXTI_register.h"
#include "EXTI_config.h"

void EXTI_voidInt0Init(void)
{
 704:	df 93       	push	r29
 706:	cf 93       	push	r28
 708:	cd b7       	in	r28, 0x3d	; 61
 70a:	de b7       	in	r29, 0x3e	; 62
	/*Set sense control for INT0 to falling edge*/
	SET_BIT(MCUCR,MCUCR_ISC01);
 70c:	a5 e5       	ldi	r26, 0x55	; 85
 70e:	b0 e0       	ldi	r27, 0x00	; 0
 710:	e5 e5       	ldi	r30, 0x55	; 85
 712:	f0 e0       	ldi	r31, 0x00	; 0
 714:	80 81       	ld	r24, Z
 716:	82 60       	ori	r24, 0x02	; 2
 718:	8c 93       	st	X, r24
	CLR_BIT(MCUCR,MCUCR_ISC00);
 71a:	a5 e5       	ldi	r26, 0x55	; 85
 71c:	b0 e0       	ldi	r27, 0x00	; 0
 71e:	e5 e5       	ldi	r30, 0x55	; 85
 720:	f0 e0       	ldi	r31, 0x00	; 0
 722:	80 81       	ld	r24, Z
 724:	8e 7f       	andi	r24, 0xFE	; 254
 726:	8c 93       	st	X, r24

	/*Peripheral interrupt enable for INT0*/
	SET_BIT(GICR,GICR_INT0);
 728:	ab e5       	ldi	r26, 0x5B	; 91
 72a:	b0 e0       	ldi	r27, 0x00	; 0
 72c:	eb e5       	ldi	r30, 0x5B	; 91
 72e:	f0 e0       	ldi	r31, 0x00	; 0
 730:	80 81       	ld	r24, Z
 732:	80 64       	ori	r24, 0x40	; 64
 734:	8c 93       	st	X, r24
}
 736:	cf 91       	pop	r28
 738:	df 91       	pop	r29
 73a:	08 95       	ret

0000073c <GIE_voidEnable>:

#include "GIE_interface.h"
#include "GIE_register.h"

void GIE_voidEnable(void)
{
 73c:	df 93       	push	r29
 73e:	cf 93       	push	r28
 740:	cd b7       	in	r28, 0x3d	; 61
 742:	de b7       	in	r29, 0x3e	; 62
    SET_BIT(SREG,SREG_I);
 744:	af e5       	ldi	r26, 0x5F	; 95
 746:	b0 e0       	ldi	r27, 0x00	; 0
 748:	ef e5       	ldi	r30, 0x5F	; 95
 74a:	f0 e0       	ldi	r31, 0x00	; 0
 74c:	80 81       	ld	r24, Z
 74e:	80 68       	ori	r24, 0x80	; 128
 750:	8c 93       	st	X, r24
}
 752:	cf 91       	pop	r28
 754:	df 91       	pop	r29
 756:	08 95       	ret

00000758 <GIE_voidDisable>:

void GIE_voidDisable(void)
{
 758:	df 93       	push	r29
 75a:	cf 93       	push	r28
 75c:	cd b7       	in	r28, 0x3d	; 61
 75e:	de b7       	in	r29, 0x3e	; 62
    CLR_BIT(SREG,SREG_I);   
 760:	af e5       	ldi	r26, 0x5F	; 95
 762:	b0 e0       	ldi	r27, 0x00	; 0
 764:	ef e5       	ldi	r30, 0x5F	; 95
 766:	f0 e0       	ldi	r31, 0x00	; 0
 768:	80 81       	ld	r24, Z
 76a:	8f 77       	andi	r24, 0x7F	; 127
 76c:	8c 93       	st	X, r24
 76e:	cf 91       	pop	r28
 770:	df 91       	pop	r29
 772:	08 95       	ret

00000774 <main>:
#include "EXTI_interface.h"
#include "GIE_interface.h"
#include "DIO_interface.h"

void main()
{
 774:	df 93       	push	r29
 776:	cf 93       	push	r28
 778:	cd b7       	in	r28, 0x3d	; 61
 77a:	de b7       	in	r29, 0x3e	; 62
	DIO_u8SetPortDirection(DIO_u8PORTD,DIO_u8PORT_INPUT);
 77c:	83 e0       	ldi	r24, 0x03	; 3
 77e:	60 e0       	ldi	r22, 0x00	; 0
 780:	0e 94 48 01 	call	0x290	; 0x290 <DIO_u8SetPortDirection>
	DIO_u8SetPortValue(DIO_u8PORTD,DIO_u8PORT_HIGH);
 784:	83 e0       	ldi	r24, 0x03	; 3
 786:	6f ef       	ldi	r22, 0xFF	; 255
 788:	0e 94 a2 02 	call	0x544	; 0x544 <DIO_u8SetPortValue>
	DIO_u8SetPinDirection(DIO_u8PORTA,DIO_u8PIN0,DIO_u8PIN_OUTPUT);
 78c:	80 e0       	ldi	r24, 0x00	; 0
 78e:	60 e0       	ldi	r22, 0x00	; 0
 790:	41 e0       	ldi	r20, 0x01	; 1
 792:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_u8SetPinDirection>
	EXTI_voidInt0Init();
 796:	0e 94 82 03 	call	0x704	; 0x704 <EXTI_voidInt0Init>
	GIE_voidEnable();
 79a:	0e 94 9e 03 	call	0x73c	; 0x73c <GIE_voidEnable>
 79e:	ff cf       	rjmp	.-2      	; 0x79e <main+0x2a>

000007a0 <__vector_1>:
	}

}
void __vector_1 (void) __attribute__((signal));
void __vector_1 (void)
{
 7a0:	1f 92       	push	r1
 7a2:	0f 92       	push	r0
 7a4:	0f b6       	in	r0, 0x3f	; 63
 7a6:	0f 92       	push	r0
 7a8:	11 24       	eor	r1, r1
 7aa:	2f 93       	push	r18
 7ac:	3f 93       	push	r19
 7ae:	4f 93       	push	r20
 7b0:	5f 93       	push	r21
 7b2:	6f 93       	push	r22
 7b4:	7f 93       	push	r23
 7b6:	8f 93       	push	r24
 7b8:	9f 93       	push	r25
 7ba:	af 93       	push	r26
 7bc:	bf 93       	push	r27
 7be:	ef 93       	push	r30
 7c0:	ff 93       	push	r31
 7c2:	df 93       	push	r29
 7c4:	cf 93       	push	r28
 7c6:	cd b7       	in	r28, 0x3d	; 61
 7c8:	de b7       	in	r29, 0x3e	; 62
	DIO_u8SetPinValue(DIO_u8PORTA,DIO_u8PIN0,DIO_u8PIN_HIGH);
 7ca:	80 e0       	ldi	r24, 0x00	; 0
 7cc:	60 e0       	ldi	r22, 0x00	; 0
 7ce:	41 e0       	ldi	r20, 0x01	; 1
 7d0:	0e 94 90 01 	call	0x320	; 0x320 <DIO_u8SetPinValue>
}
 7d4:	cf 91       	pop	r28
 7d6:	df 91       	pop	r29
 7d8:	ff 91       	pop	r31
 7da:	ef 91       	pop	r30
 7dc:	bf 91       	pop	r27
 7de:	af 91       	pop	r26
 7e0:	9f 91       	pop	r25
 7e2:	8f 91       	pop	r24
 7e4:	7f 91       	pop	r23
 7e6:	6f 91       	pop	r22
 7e8:	5f 91       	pop	r21
 7ea:	4f 91       	pop	r20
 7ec:	3f 91       	pop	r19
 7ee:	2f 91       	pop	r18
 7f0:	0f 90       	pop	r0
 7f2:	0f be       	out	0x3f, r0	; 63
 7f4:	0f 90       	pop	r0
 7f6:	1f 90       	pop	r1
 7f8:	18 95       	reti

000007fa <_exit>:
 7fa:	f8 94       	cli

000007fc <__stop_program>:
 7fc:	ff cf       	rjmp	.-2      	; 0x7fc <__stop_program>
