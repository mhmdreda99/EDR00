
E02_EXTINT_TOGGLE_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b6e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000006  00800060  00800060  00000be2  2**0
                  ALLOC
  2 .stab         00001020  00000000  00000000  00000be4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00001022  00000000  00000000  00001c04  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_1>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__vector_2>
   c:	0c 94 98 00 	jmp	0x130	; 0x130 <__vector_3>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 94 05 	call	0xb28	; 0xb28 <main>
  74:	0c 94 b5 05 	jmp	0xb6a	; 0xb6a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_1>:
static void (*user_func1)(void);
static void (*user_func2)(void);


ISR(INT0_vect)
{
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	2f 93       	push	r18
  88:	3f 93       	push	r19
  8a:	4f 93       	push	r20
  8c:	5f 93       	push	r21
  8e:	6f 93       	push	r22
  90:	7f 93       	push	r23
  92:	8f 93       	push	r24
  94:	9f 93       	push	r25
  96:	af 93       	push	r26
  98:	bf 93       	push	r27
  9a:	ef 93       	push	r30
  9c:	ff 93       	push	r31
  9e:	df 93       	push	r29
  a0:	cf 93       	push	r28
  a2:	cd b7       	in	r28, 0x3d	; 61
  a4:	de b7       	in	r29, 0x3e	; 62
	(*user_func0)();
  a6:	e0 91 60 00 	lds	r30, 0x0060
  aa:	f0 91 61 00 	lds	r31, 0x0061
  ae:	09 95       	icall
}
  b0:	cf 91       	pop	r28
  b2:	df 91       	pop	r29
  b4:	ff 91       	pop	r31
  b6:	ef 91       	pop	r30
  b8:	bf 91       	pop	r27
  ba:	af 91       	pop	r26
  bc:	9f 91       	pop	r25
  be:	8f 91       	pop	r24
  c0:	7f 91       	pop	r23
  c2:	6f 91       	pop	r22
  c4:	5f 91       	pop	r21
  c6:	4f 91       	pop	r20
  c8:	3f 91       	pop	r19
  ca:	2f 91       	pop	r18
  cc:	0f 90       	pop	r0
  ce:	0f be       	out	0x3f, r0	; 63
  d0:	0f 90       	pop	r0
  d2:	1f 90       	pop	r1
  d4:	18 95       	reti

000000d6 <__vector_2>:

ISR(INT1_vect)
{
  d6:	1f 92       	push	r1
  d8:	0f 92       	push	r0
  da:	0f b6       	in	r0, 0x3f	; 63
  dc:	0f 92       	push	r0
  de:	11 24       	eor	r1, r1
  e0:	2f 93       	push	r18
  e2:	3f 93       	push	r19
  e4:	4f 93       	push	r20
  e6:	5f 93       	push	r21
  e8:	6f 93       	push	r22
  ea:	7f 93       	push	r23
  ec:	8f 93       	push	r24
  ee:	9f 93       	push	r25
  f0:	af 93       	push	r26
  f2:	bf 93       	push	r27
  f4:	ef 93       	push	r30
  f6:	ff 93       	push	r31
  f8:	df 93       	push	r29
  fa:	cf 93       	push	r28
  fc:	cd b7       	in	r28, 0x3d	; 61
  fe:	de b7       	in	r29, 0x3e	; 62
	(*user_func1)();
 100:	e0 91 62 00 	lds	r30, 0x0062
 104:	f0 91 63 00 	lds	r31, 0x0063
 108:	09 95       	icall
}
 10a:	cf 91       	pop	r28
 10c:	df 91       	pop	r29
 10e:	ff 91       	pop	r31
 110:	ef 91       	pop	r30
 112:	bf 91       	pop	r27
 114:	af 91       	pop	r26
 116:	9f 91       	pop	r25
 118:	8f 91       	pop	r24
 11a:	7f 91       	pop	r23
 11c:	6f 91       	pop	r22
 11e:	5f 91       	pop	r21
 120:	4f 91       	pop	r20
 122:	3f 91       	pop	r19
 124:	2f 91       	pop	r18
 126:	0f 90       	pop	r0
 128:	0f be       	out	0x3f, r0	; 63
 12a:	0f 90       	pop	r0
 12c:	1f 90       	pop	r1
 12e:	18 95       	reti

00000130 <__vector_3>:

ISR(INT2_vect)
{
 130:	1f 92       	push	r1
 132:	0f 92       	push	r0
 134:	0f b6       	in	r0, 0x3f	; 63
 136:	0f 92       	push	r0
 138:	11 24       	eor	r1, r1
 13a:	2f 93       	push	r18
 13c:	3f 93       	push	r19
 13e:	4f 93       	push	r20
 140:	5f 93       	push	r21
 142:	6f 93       	push	r22
 144:	7f 93       	push	r23
 146:	8f 93       	push	r24
 148:	9f 93       	push	r25
 14a:	af 93       	push	r26
 14c:	bf 93       	push	r27
 14e:	ef 93       	push	r30
 150:	ff 93       	push	r31
 152:	df 93       	push	r29
 154:	cf 93       	push	r28
 156:	cd b7       	in	r28, 0x3d	; 61
 158:	de b7       	in	r29, 0x3e	; 62
	(*user_func2)();
 15a:	e0 91 64 00 	lds	r30, 0x0064
 15e:	f0 91 65 00 	lds	r31, 0x0065
 162:	09 95       	icall
}
 164:	cf 91       	pop	r28
 166:	df 91       	pop	r29
 168:	ff 91       	pop	r31
 16a:	ef 91       	pop	r30
 16c:	bf 91       	pop	r27
 16e:	af 91       	pop	r26
 170:	9f 91       	pop	r25
 172:	8f 91       	pop	r24
 174:	7f 91       	pop	r23
 176:	6f 91       	pop	r22
 178:	5f 91       	pop	r21
 17a:	4f 91       	pop	r20
 17c:	3f 91       	pop	r19
 17e:	2f 91       	pop	r18
 180:	0f 90       	pop	r0
 182:	0f be       	out	0x3f, r0	; 63
 184:	0f 90       	pop	r0
 186:	1f 90       	pop	r1
 188:	18 95       	reti

0000018a <EXTINT_uint8ExternalInt0>:


STD_return_t EXTINT_uint8ExternalInt0(EXTINT_SENSE_CONTROL_t senseCtrl)
{
 18a:	df 93       	push	r29
 18c:	cf 93       	push	r28
 18e:	00 d0       	rcall	.+0      	; 0x190 <EXTINT_uint8ExternalInt0+0x6>
 190:	00 d0       	rcall	.+0      	; 0x192 <EXTINT_uint8ExternalInt0+0x8>
 192:	cd b7       	in	r28, 0x3d	; 61
 194:	de b7       	in	r29, 0x3e	; 62
 196:	89 83       	std	Y+1, r24	; 0x01
	ENABLE_INT0();
 198:	ab e5       	ldi	r26, 0x5B	; 91
 19a:	b0 e0       	ldi	r27, 0x00	; 0
 19c:	eb e5       	ldi	r30, 0x5B	; 91
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	80 81       	ld	r24, Z
 1a2:	80 64       	ori	r24, 0x40	; 64
 1a4:	8c 93       	st	X, r24

	switch (senseCtrl)
 1a6:	89 81       	ldd	r24, Y+1	; 0x01
 1a8:	28 2f       	mov	r18, r24
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	3c 83       	std	Y+4, r19	; 0x04
 1ae:	2b 83       	std	Y+3, r18	; 0x03
 1b0:	8b 81       	ldd	r24, Y+3	; 0x03
 1b2:	9c 81       	ldd	r25, Y+4	; 0x04
 1b4:	00 97       	sbiw	r24, 0x00	; 0
 1b6:	31 f0       	breq	.+12     	; 0x1c4 <EXTINT_uint8ExternalInt0+0x3a>
 1b8:	2b 81       	ldd	r18, Y+3	; 0x03
 1ba:	3c 81       	ldd	r19, Y+4	; 0x04
 1bc:	21 30       	cpi	r18, 0x01	; 1
 1be:	31 05       	cpc	r19, r1
 1c0:	81 f0       	breq	.+32     	; 0x1e2 <EXTINT_uint8ExternalInt0+0x58>
 1c2:	1e c0       	rjmp	.+60     	; 0x200 <EXTINT_uint8ExternalInt0+0x76>
	{
	case EXTINT_FALLING_EDGE:
		CLEAR_BIT(MCUCR,ISC00);
 1c4:	a5 e5       	ldi	r26, 0x55	; 85
 1c6:	b0 e0       	ldi	r27, 0x00	; 0
 1c8:	e5 e5       	ldi	r30, 0x55	; 85
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	8e 7f       	andi	r24, 0xFE	; 254
 1d0:	8c 93       	st	X, r24
		SET_BIT(MCUCR,ISC01);
 1d2:	a5 e5       	ldi	r26, 0x55	; 85
 1d4:	b0 e0       	ldi	r27, 0x00	; 0
 1d6:	e5 e5       	ldi	r30, 0x55	; 85
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	82 60       	ori	r24, 0x02	; 2
 1de:	8c 93       	st	X, r24
 1e0:	12 c0       	rjmp	.+36     	; 0x206 <EXTINT_uint8ExternalInt0+0x7c>
		break;
	case EXTINT_RISING_EDGE:
		SET_BIT(MCUCR,ISC00);
 1e2:	a5 e5       	ldi	r26, 0x55	; 85
 1e4:	b0 e0       	ldi	r27, 0x00	; 0
 1e6:	e5 e5       	ldi	r30, 0x55	; 85
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	81 60       	ori	r24, 0x01	; 1
 1ee:	8c 93       	st	X, r24
		SET_BIT(MCUCR,ISC01);
 1f0:	a5 e5       	ldi	r26, 0x55	; 85
 1f2:	b0 e0       	ldi	r27, 0x00	; 0
 1f4:	e5 e5       	ldi	r30, 0x55	; 85
 1f6:	f0 e0       	ldi	r31, 0x00	; 0
 1f8:	80 81       	ld	r24, Z
 1fa:	82 60       	ori	r24, 0x02	; 2
 1fc:	8c 93       	st	X, r24
 1fe:	03 c0       	rjmp	.+6      	; 0x206 <EXTINT_uint8ExternalInt0+0x7c>
		break;
		default:
		return P_NOK;
 200:	31 e0       	ldi	r19, 0x01	; 1
 202:	3a 83       	std	Y+2, r19	; 0x02
 204:	01 c0       	rjmp	.+2      	; 0x208 <EXTINT_uint8ExternalInt0+0x7e>
	}
	return P_OK;
 206:	1a 82       	std	Y+2, r1	; 0x02
 208:	8a 81       	ldd	r24, Y+2	; 0x02
}
 20a:	0f 90       	pop	r0
 20c:	0f 90       	pop	r0
 20e:	0f 90       	pop	r0
 210:	0f 90       	pop	r0
 212:	cf 91       	pop	r28
 214:	df 91       	pop	r29
 216:	08 95       	ret

00000218 <EXTINT_callbackInt0>:
extern void EXTINT_callbackInt0(void(*ptrfunc)())
{
 218:	df 93       	push	r29
 21a:	cf 93       	push	r28
 21c:	00 d0       	rcall	.+0      	; 0x21e <EXTINT_callbackInt0+0x6>
 21e:	cd b7       	in	r28, 0x3d	; 61
 220:	de b7       	in	r29, 0x3e	; 62
 222:	9a 83       	std	Y+2, r25	; 0x02
 224:	89 83       	std	Y+1, r24	; 0x01
	user_func0=ptrfunc;
 226:	89 81       	ldd	r24, Y+1	; 0x01
 228:	9a 81       	ldd	r25, Y+2	; 0x02
 22a:	90 93 61 00 	sts	0x0061, r25
 22e:	80 93 60 00 	sts	0x0060, r24
}
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	cf 91       	pop	r28
 238:	df 91       	pop	r29
 23a:	08 95       	ret

0000023c <EXTINT_uint8ExternalInt1>:

STD_return_t EXTINT_uint8ExternalInt1(EXTINT_SENSE_CONTROL_t senseCtrl)
{
 23c:	df 93       	push	r29
 23e:	cf 93       	push	r28
 240:	00 d0       	rcall	.+0      	; 0x242 <EXTINT_uint8ExternalInt1+0x6>
 242:	00 d0       	rcall	.+0      	; 0x244 <EXTINT_uint8ExternalInt1+0x8>
 244:	cd b7       	in	r28, 0x3d	; 61
 246:	de b7       	in	r29, 0x3e	; 62
 248:	89 83       	std	Y+1, r24	; 0x01
	ENABLE_INT1();
 24a:	ab e5       	ldi	r26, 0x5B	; 91
 24c:	b0 e0       	ldi	r27, 0x00	; 0
 24e:	eb e5       	ldi	r30, 0x5B	; 91
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	80 81       	ld	r24, Z
 254:	80 68       	ori	r24, 0x80	; 128
 256:	8c 93       	st	X, r24

	switch (senseCtrl)
 258:	89 81       	ldd	r24, Y+1	; 0x01
 25a:	28 2f       	mov	r18, r24
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	3c 83       	std	Y+4, r19	; 0x04
 260:	2b 83       	std	Y+3, r18	; 0x03
 262:	8b 81       	ldd	r24, Y+3	; 0x03
 264:	9c 81       	ldd	r25, Y+4	; 0x04
 266:	00 97       	sbiw	r24, 0x00	; 0
 268:	31 f0       	breq	.+12     	; 0x276 <EXTINT_uint8ExternalInt1+0x3a>
 26a:	2b 81       	ldd	r18, Y+3	; 0x03
 26c:	3c 81       	ldd	r19, Y+4	; 0x04
 26e:	21 30       	cpi	r18, 0x01	; 1
 270:	31 05       	cpc	r19, r1
 272:	81 f0       	breq	.+32     	; 0x294 <EXTINT_uint8ExternalInt1+0x58>
 274:	1e c0       	rjmp	.+60     	; 0x2b2 <EXTINT_uint8ExternalInt1+0x76>
	{
	case EXTINT_FALLING_EDGE:
		CLEAR_BIT(MCUCR,ISC10);
 276:	a5 e5       	ldi	r26, 0x55	; 85
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	e5 e5       	ldi	r30, 0x55	; 85
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	8b 7f       	andi	r24, 0xFB	; 251
 282:	8c 93       	st	X, r24
		SET_BIT(MCUCR,ISC11);
 284:	a5 e5       	ldi	r26, 0x55	; 85
 286:	b0 e0       	ldi	r27, 0x00	; 0
 288:	e5 e5       	ldi	r30, 0x55	; 85
 28a:	f0 e0       	ldi	r31, 0x00	; 0
 28c:	80 81       	ld	r24, Z
 28e:	88 60       	ori	r24, 0x08	; 8
 290:	8c 93       	st	X, r24
 292:	12 c0       	rjmp	.+36     	; 0x2b8 <EXTINT_uint8ExternalInt1+0x7c>
		break;
	case EXTINT_RISING_EDGE:
		SET_BIT(MCUCR,ISC10);
 294:	a5 e5       	ldi	r26, 0x55	; 85
 296:	b0 e0       	ldi	r27, 0x00	; 0
 298:	e5 e5       	ldi	r30, 0x55	; 85
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	84 60       	ori	r24, 0x04	; 4
 2a0:	8c 93       	st	X, r24
		SET_BIT(MCUCR,ISC11);
 2a2:	a5 e5       	ldi	r26, 0x55	; 85
 2a4:	b0 e0       	ldi	r27, 0x00	; 0
 2a6:	e5 e5       	ldi	r30, 0x55	; 85
 2a8:	f0 e0       	ldi	r31, 0x00	; 0
 2aa:	80 81       	ld	r24, Z
 2ac:	88 60       	ori	r24, 0x08	; 8
 2ae:	8c 93       	st	X, r24
 2b0:	03 c0       	rjmp	.+6      	; 0x2b8 <EXTINT_uint8ExternalInt1+0x7c>
		break;
		default:
		return P_NOK;
 2b2:	31 e0       	ldi	r19, 0x01	; 1
 2b4:	3a 83       	std	Y+2, r19	; 0x02
 2b6:	01 c0       	rjmp	.+2      	; 0x2ba <EXTINT_uint8ExternalInt1+0x7e>
	}
	return P_OK;
 2b8:	1a 82       	std	Y+2, r1	; 0x02
 2ba:	8a 81       	ldd	r24, Y+2	; 0x02
}
 2bc:	0f 90       	pop	r0
 2be:	0f 90       	pop	r0
 2c0:	0f 90       	pop	r0
 2c2:	0f 90       	pop	r0
 2c4:	cf 91       	pop	r28
 2c6:	df 91       	pop	r29
 2c8:	08 95       	ret

000002ca <EXTINT_callbackInt1>:
extern void EXTINT_callbackInt1(void(*ptrfunc)())
{
 2ca:	df 93       	push	r29
 2cc:	cf 93       	push	r28
 2ce:	00 d0       	rcall	.+0      	; 0x2d0 <EXTINT_callbackInt1+0x6>
 2d0:	cd b7       	in	r28, 0x3d	; 61
 2d2:	de b7       	in	r29, 0x3e	; 62
 2d4:	9a 83       	std	Y+2, r25	; 0x02
 2d6:	89 83       	std	Y+1, r24	; 0x01
	user_func1=ptrfunc;
 2d8:	89 81       	ldd	r24, Y+1	; 0x01
 2da:	9a 81       	ldd	r25, Y+2	; 0x02
 2dc:	90 93 63 00 	sts	0x0063, r25
 2e0:	80 93 62 00 	sts	0x0062, r24
}
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	cf 91       	pop	r28
 2ea:	df 91       	pop	r29
 2ec:	08 95       	ret

000002ee <EXTINT_uint8ExternalInt2>:

STD_return_t EXTINT_uint8ExternalInt2(EXTINT_SENSE_CONTROL_t senseCtrl)
{
 2ee:	df 93       	push	r29
 2f0:	cf 93       	push	r28
 2f2:	00 d0       	rcall	.+0      	; 0x2f4 <EXTINT_uint8ExternalInt2+0x6>
 2f4:	00 d0       	rcall	.+0      	; 0x2f6 <EXTINT_uint8ExternalInt2+0x8>
 2f6:	cd b7       	in	r28, 0x3d	; 61
 2f8:	de b7       	in	r29, 0x3e	; 62
 2fa:	89 83       	std	Y+1, r24	; 0x01
	ENABLE_INT2();
 2fc:	ab e5       	ldi	r26, 0x5B	; 91
 2fe:	b0 e0       	ldi	r27, 0x00	; 0
 300:	eb e5       	ldi	r30, 0x5B	; 91
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	80 81       	ld	r24, Z
 306:	80 68       	ori	r24, 0x80	; 128
 308:	8c 93       	st	X, r24

	switch (senseCtrl)
 30a:	89 81       	ldd	r24, Y+1	; 0x01
 30c:	28 2f       	mov	r18, r24
 30e:	30 e0       	ldi	r19, 0x00	; 0
 310:	3c 83       	std	Y+4, r19	; 0x04
 312:	2b 83       	std	Y+3, r18	; 0x03
 314:	8b 81       	ldd	r24, Y+3	; 0x03
 316:	9c 81       	ldd	r25, Y+4	; 0x04
 318:	00 97       	sbiw	r24, 0x00	; 0
 31a:	31 f0       	breq	.+12     	; 0x328 <EXTINT_uint8ExternalInt2+0x3a>
 31c:	2b 81       	ldd	r18, Y+3	; 0x03
 31e:	3c 81       	ldd	r19, Y+4	; 0x04
 320:	21 30       	cpi	r18, 0x01	; 1
 322:	31 05       	cpc	r19, r1
 324:	49 f0       	breq	.+18     	; 0x338 <EXTINT_uint8ExternalInt2+0x4a>
 326:	10 c0       	rjmp	.+32     	; 0x348 <EXTINT_uint8ExternalInt2+0x5a>
	{
	case EXTINT_FALLING_EDGE:
		CLEAR_BIT(MCUCR,ISC2);
 328:	a5 e5       	ldi	r26, 0x55	; 85
 32a:	b0 e0       	ldi	r27, 0x00	; 0
 32c:	e5 e5       	ldi	r30, 0x55	; 85
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	80 81       	ld	r24, Z
 332:	8f 7b       	andi	r24, 0xBF	; 191
 334:	8c 93       	st	X, r24
 336:	0b c0       	rjmp	.+22     	; 0x34e <EXTINT_uint8ExternalInt2+0x60>
		break;
	case EXTINT_RISING_EDGE:
		SET_BIT(MCUCR,ISC2);
 338:	a5 e5       	ldi	r26, 0x55	; 85
 33a:	b0 e0       	ldi	r27, 0x00	; 0
 33c:	e5 e5       	ldi	r30, 0x55	; 85
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	80 81       	ld	r24, Z
 342:	80 64       	ori	r24, 0x40	; 64
 344:	8c 93       	st	X, r24
 346:	03 c0       	rjmp	.+6      	; 0x34e <EXTINT_uint8ExternalInt2+0x60>
		break;
		default:
		return P_NOK;
 348:	31 e0       	ldi	r19, 0x01	; 1
 34a:	3a 83       	std	Y+2, r19	; 0x02
 34c:	01 c0       	rjmp	.+2      	; 0x350 <EXTINT_uint8ExternalInt2+0x62>
	}
	return P_OK;
 34e:	1a 82       	std	Y+2, r1	; 0x02
 350:	8a 81       	ldd	r24, Y+2	; 0x02
}
 352:	0f 90       	pop	r0
 354:	0f 90       	pop	r0
 356:	0f 90       	pop	r0
 358:	0f 90       	pop	r0
 35a:	cf 91       	pop	r28
 35c:	df 91       	pop	r29
 35e:	08 95       	ret

00000360 <EXTINT_callbackInt2>:
extern void EXTINT_callbackInt2(void(*ptrfunc)())
{
 360:	df 93       	push	r29
 362:	cf 93       	push	r28
 364:	00 d0       	rcall	.+0      	; 0x366 <EXTINT_callbackInt2+0x6>
 366:	cd b7       	in	r28, 0x3d	; 61
 368:	de b7       	in	r29, 0x3e	; 62
 36a:	9a 83       	std	Y+2, r25	; 0x02
 36c:	89 83       	std	Y+1, r24	; 0x01
	user_func2=ptrfunc;
 36e:	89 81       	ldd	r24, Y+1	; 0x01
 370:	9a 81       	ldd	r25, Y+2	; 0x02
 372:	90 93 65 00 	sts	0x0065, r25
 376:	80 93 64 00 	sts	0x0064, r24
}
 37a:	0f 90       	pop	r0
 37c:	0f 90       	pop	r0
 37e:	cf 91       	pop	r28
 380:	df 91       	pop	r29
 382:	08 95       	ret

00000384 <DIO_init>:
/************************************************************/
/************	Function Implementation section	*************/
/************************************************************/

void DIO_init(void)
{
 384:	df 93       	push	r29
 386:	cf 93       	push	r28
 388:	cd b7       	in	r28, 0x3d	; 61
 38a:	de b7       	in	r29, 0x3e	; 62
	PINA = 0;
 38c:	e9 e3       	ldi	r30, 0x39	; 57
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	10 82       	st	Z, r1
	PINB = 0;
 392:	e6 e3       	ldi	r30, 0x36	; 54
 394:	f0 e0       	ldi	r31, 0x00	; 0
 396:	10 82       	st	Z, r1
	PINC = 0;
 398:	e3 e3       	ldi	r30, 0x33	; 51
 39a:	f0 e0       	ldi	r31, 0x00	; 0
 39c:	10 82       	st	Z, r1
	PIND = 0;
 39e:	e0 e3       	ldi	r30, 0x30	; 48
 3a0:	f0 e0       	ldi	r31, 0x00	; 0
 3a2:	10 82       	st	Z, r1

	DDRA = 0;
 3a4:	ea e3       	ldi	r30, 0x3A	; 58
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	10 82       	st	Z, r1
	DDRB = 0;
 3aa:	e7 e3       	ldi	r30, 0x37	; 55
 3ac:	f0 e0       	ldi	r31, 0x00	; 0
 3ae:	10 82       	st	Z, r1
	DDRC = 0;
 3b0:	e4 e3       	ldi	r30, 0x34	; 52
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	10 82       	st	Z, r1
	DDRD = 0;
 3b6:	e1 e3       	ldi	r30, 0x31	; 49
 3b8:	f0 e0       	ldi	r31, 0x00	; 0
 3ba:	10 82       	st	Z, r1
}
 3bc:	cf 91       	pop	r28
 3be:	df 91       	pop	r29
 3c0:	08 95       	ret

000003c2 <DIO_uint8SetPinDirection>:

STD_return_t DIO_uint8SetPinDirection(DIO_PORT_NUMBER_t PORT,
		DIO_PIN_NUMBER_t PIN, DIO_PIN_DIRECTION_t DIRECTION)
{
 3c2:	df 93       	push	r29
 3c4:	cf 93       	push	r28
 3c6:	cd b7       	in	r28, 0x3d	; 61
 3c8:	de b7       	in	r29, 0x3e	; 62
 3ca:	2a 97       	sbiw	r28, 0x0a	; 10
 3cc:	0f b6       	in	r0, 0x3f	; 63
 3ce:	f8 94       	cli
 3d0:	de bf       	out	0x3e, r29	; 62
 3d2:	0f be       	out	0x3f, r0	; 63
 3d4:	cd bf       	out	0x3d, r28	; 61
 3d6:	89 83       	std	Y+1, r24	; 0x01
 3d8:	6a 83       	std	Y+2, r22	; 0x02
 3da:	4b 83       	std	Y+3, r20	; 0x03

	if ((PIN <= MAX_PIN_NUMBER) && (PIN >= MIN_PIN_NUMBER))
 3dc:	8a 81       	ldd	r24, Y+2	; 0x02
 3de:	88 30       	cpi	r24, 0x08	; 8
 3e0:	08 f0       	brcs	.+2      	; 0x3e4 <DIO_uint8SetPinDirection+0x22>
 3e2:	fe c0       	rjmp	.+508    	; 0x5e0 <DIO_uint8SetPinDirection+0x21e>
	{
		switch (DIRECTION)
 3e4:	8b 81       	ldd	r24, Y+3	; 0x03
 3e6:	28 2f       	mov	r18, r24
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	3a 87       	std	Y+10, r19	; 0x0a
 3ec:	29 87       	std	Y+9, r18	; 0x09
 3ee:	89 85       	ldd	r24, Y+9	; 0x09
 3f0:	9a 85       	ldd	r25, Y+10	; 0x0a
 3f2:	00 97       	sbiw	r24, 0x00	; 0
 3f4:	39 f0       	breq	.+14     	; 0x404 <DIO_uint8SetPinDirection+0x42>
 3f6:	29 85       	ldd	r18, Y+9	; 0x09
 3f8:	3a 85       	ldd	r19, Y+10	; 0x0a
 3fa:	21 30       	cpi	r18, 0x01	; 1
 3fc:	31 05       	cpc	r19, r1
 3fe:	09 f4       	brne	.+2      	; 0x402 <DIO_uint8SetPinDirection+0x40>
 400:	78 c0       	rjmp	.+240    	; 0x4f2 <DIO_uint8SetPinDirection+0x130>
 402:	e9 c0       	rjmp	.+466    	; 0x5d6 <DIO_uint8SetPinDirection+0x214>
		{
		case DIO_PIN_IN:
			switch (PORT)
 404:	89 81       	ldd	r24, Y+1	; 0x01
 406:	28 2f       	mov	r18, r24
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	38 87       	std	Y+8, r19	; 0x08
 40c:	2f 83       	std	Y+7, r18	; 0x07
 40e:	8f 81       	ldd	r24, Y+7	; 0x07
 410:	98 85       	ldd	r25, Y+8	; 0x08
 412:	81 30       	cpi	r24, 0x01	; 1
 414:	91 05       	cpc	r25, r1
 416:	59 f1       	breq	.+86     	; 0x46e <DIO_uint8SetPinDirection+0xac>
 418:	2f 81       	ldd	r18, Y+7	; 0x07
 41a:	38 85       	ldd	r19, Y+8	; 0x08
 41c:	22 30       	cpi	r18, 0x02	; 2
 41e:	31 05       	cpc	r19, r1
 420:	2c f4       	brge	.+10     	; 0x42c <DIO_uint8SetPinDirection+0x6a>
 422:	8f 81       	ldd	r24, Y+7	; 0x07
 424:	98 85       	ldd	r25, Y+8	; 0x08
 426:	00 97       	sbiw	r24, 0x00	; 0
 428:	69 f0       	breq	.+26     	; 0x444 <DIO_uint8SetPinDirection+0x82>
 42a:	60 c0       	rjmp	.+192    	; 0x4ec <DIO_uint8SetPinDirection+0x12a>
 42c:	2f 81       	ldd	r18, Y+7	; 0x07
 42e:	38 85       	ldd	r19, Y+8	; 0x08
 430:	22 30       	cpi	r18, 0x02	; 2
 432:	31 05       	cpc	r19, r1
 434:	89 f1       	breq	.+98     	; 0x498 <DIO_uint8SetPinDirection+0xd6>
 436:	8f 81       	ldd	r24, Y+7	; 0x07
 438:	98 85       	ldd	r25, Y+8	; 0x08
 43a:	83 30       	cpi	r24, 0x03	; 3
 43c:	91 05       	cpc	r25, r1
 43e:	09 f4       	brne	.+2      	; 0x442 <DIO_uint8SetPinDirection+0x80>
 440:	40 c0       	rjmp	.+128    	; 0x4c2 <DIO_uint8SetPinDirection+0x100>
 442:	54 c0       	rjmp	.+168    	; 0x4ec <DIO_uint8SetPinDirection+0x12a>
			{
			case (DIO_PORT_A):
				CLEAR_BIT(DDRA, PIN);
 444:	aa e3       	ldi	r26, 0x3A	; 58
 446:	b0 e0       	ldi	r27, 0x00	; 0
 448:	ea e3       	ldi	r30, 0x3A	; 58
 44a:	f0 e0       	ldi	r31, 0x00	; 0
 44c:	80 81       	ld	r24, Z
 44e:	48 2f       	mov	r20, r24
 450:	8a 81       	ldd	r24, Y+2	; 0x02
 452:	28 2f       	mov	r18, r24
 454:	30 e0       	ldi	r19, 0x00	; 0
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	02 2e       	mov	r0, r18
 45c:	02 c0       	rjmp	.+4      	; 0x462 <DIO_uint8SetPinDirection+0xa0>
 45e:	88 0f       	add	r24, r24
 460:	99 1f       	adc	r25, r25
 462:	0a 94       	dec	r0
 464:	e2 f7       	brpl	.-8      	; 0x45e <DIO_uint8SetPinDirection+0x9c>
 466:	80 95       	com	r24
 468:	84 23       	and	r24, r20
 46a:	8c 93       	st	X, r24
 46c:	b7 c0       	rjmp	.+366    	; 0x5dc <DIO_uint8SetPinDirection+0x21a>
				break;
			case (DIO_PORT_B):
				CLEAR_BIT(DDRB, PIN);
 46e:	a7 e3       	ldi	r26, 0x37	; 55
 470:	b0 e0       	ldi	r27, 0x00	; 0
 472:	e7 e3       	ldi	r30, 0x37	; 55
 474:	f0 e0       	ldi	r31, 0x00	; 0
 476:	80 81       	ld	r24, Z
 478:	48 2f       	mov	r20, r24
 47a:	8a 81       	ldd	r24, Y+2	; 0x02
 47c:	28 2f       	mov	r18, r24
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	02 2e       	mov	r0, r18
 486:	02 c0       	rjmp	.+4      	; 0x48c <DIO_uint8SetPinDirection+0xca>
 488:	88 0f       	add	r24, r24
 48a:	99 1f       	adc	r25, r25
 48c:	0a 94       	dec	r0
 48e:	e2 f7       	brpl	.-8      	; 0x488 <DIO_uint8SetPinDirection+0xc6>
 490:	80 95       	com	r24
 492:	84 23       	and	r24, r20
 494:	8c 93       	st	X, r24
 496:	a2 c0       	rjmp	.+324    	; 0x5dc <DIO_uint8SetPinDirection+0x21a>
				break;
			case (DIO_PORT_C):
				CLEAR_BIT(DDRC, PIN);
 498:	a4 e3       	ldi	r26, 0x34	; 52
 49a:	b0 e0       	ldi	r27, 0x00	; 0
 49c:	e4 e3       	ldi	r30, 0x34	; 52
 49e:	f0 e0       	ldi	r31, 0x00	; 0
 4a0:	80 81       	ld	r24, Z
 4a2:	48 2f       	mov	r20, r24
 4a4:	8a 81       	ldd	r24, Y+2	; 0x02
 4a6:	28 2f       	mov	r18, r24
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	02 2e       	mov	r0, r18
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <DIO_uint8SetPinDirection+0xf4>
 4b2:	88 0f       	add	r24, r24
 4b4:	99 1f       	adc	r25, r25
 4b6:	0a 94       	dec	r0
 4b8:	e2 f7       	brpl	.-8      	; 0x4b2 <DIO_uint8SetPinDirection+0xf0>
 4ba:	80 95       	com	r24
 4bc:	84 23       	and	r24, r20
 4be:	8c 93       	st	X, r24
 4c0:	8d c0       	rjmp	.+282    	; 0x5dc <DIO_uint8SetPinDirection+0x21a>
				break;
			case (DIO_PORT_D):
				CLEAR_BIT(DDRD, PIN);
 4c2:	a1 e3       	ldi	r26, 0x31	; 49
 4c4:	b0 e0       	ldi	r27, 0x00	; 0
 4c6:	e1 e3       	ldi	r30, 0x31	; 49
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	80 81       	ld	r24, Z
 4cc:	48 2f       	mov	r20, r24
 4ce:	8a 81       	ldd	r24, Y+2	; 0x02
 4d0:	28 2f       	mov	r18, r24
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	81 e0       	ldi	r24, 0x01	; 1
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	02 2e       	mov	r0, r18
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <DIO_uint8SetPinDirection+0x11e>
 4dc:	88 0f       	add	r24, r24
 4de:	99 1f       	adc	r25, r25
 4e0:	0a 94       	dec	r0
 4e2:	e2 f7       	brpl	.-8      	; 0x4dc <DIO_uint8SetPinDirection+0x11a>
 4e4:	80 95       	com	r24
 4e6:	84 23       	and	r24, r20
 4e8:	8c 93       	st	X, r24
 4ea:	78 c0       	rjmp	.+240    	; 0x5dc <DIO_uint8SetPinDirection+0x21a>
				break;
			default:
				return P_NOK;
 4ec:	91 e0       	ldi	r25, 0x01	; 1
 4ee:	9e 83       	std	Y+6, r25	; 0x06
 4f0:	79 c0       	rjmp	.+242    	; 0x5e4 <DIO_uint8SetPinDirection+0x222>
			}
			break;

		case DIO_PIN_OUT:
			switch (PORT)
 4f2:	89 81       	ldd	r24, Y+1	; 0x01
 4f4:	28 2f       	mov	r18, r24
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	3d 83       	std	Y+5, r19	; 0x05
 4fa:	2c 83       	std	Y+4, r18	; 0x04
 4fc:	8c 81       	ldd	r24, Y+4	; 0x04
 4fe:	9d 81       	ldd	r25, Y+5	; 0x05
 500:	81 30       	cpi	r24, 0x01	; 1
 502:	91 05       	cpc	r25, r1
 504:	49 f1       	breq	.+82     	; 0x558 <DIO_uint8SetPinDirection+0x196>
 506:	2c 81       	ldd	r18, Y+4	; 0x04
 508:	3d 81       	ldd	r19, Y+5	; 0x05
 50a:	22 30       	cpi	r18, 0x02	; 2
 50c:	31 05       	cpc	r19, r1
 50e:	2c f4       	brge	.+10     	; 0x51a <DIO_uint8SetPinDirection+0x158>
 510:	8c 81       	ldd	r24, Y+4	; 0x04
 512:	9d 81       	ldd	r25, Y+5	; 0x05
 514:	00 97       	sbiw	r24, 0x00	; 0
 516:	61 f0       	breq	.+24     	; 0x530 <DIO_uint8SetPinDirection+0x16e>
 518:	5b c0       	rjmp	.+182    	; 0x5d0 <DIO_uint8SetPinDirection+0x20e>
 51a:	2c 81       	ldd	r18, Y+4	; 0x04
 51c:	3d 81       	ldd	r19, Y+5	; 0x05
 51e:	22 30       	cpi	r18, 0x02	; 2
 520:	31 05       	cpc	r19, r1
 522:	71 f1       	breq	.+92     	; 0x580 <DIO_uint8SetPinDirection+0x1be>
 524:	8c 81       	ldd	r24, Y+4	; 0x04
 526:	9d 81       	ldd	r25, Y+5	; 0x05
 528:	83 30       	cpi	r24, 0x03	; 3
 52a:	91 05       	cpc	r25, r1
 52c:	e9 f1       	breq	.+122    	; 0x5a8 <DIO_uint8SetPinDirection+0x1e6>
 52e:	50 c0       	rjmp	.+160    	; 0x5d0 <DIO_uint8SetPinDirection+0x20e>
			{
			case (DIO_PORT_A):
				SET_BIT(DDRA, PIN);
 530:	aa e3       	ldi	r26, 0x3A	; 58
 532:	b0 e0       	ldi	r27, 0x00	; 0
 534:	ea e3       	ldi	r30, 0x3A	; 58
 536:	f0 e0       	ldi	r31, 0x00	; 0
 538:	80 81       	ld	r24, Z
 53a:	48 2f       	mov	r20, r24
 53c:	8a 81       	ldd	r24, Y+2	; 0x02
 53e:	28 2f       	mov	r18, r24
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	02 2e       	mov	r0, r18
 548:	02 c0       	rjmp	.+4      	; 0x54e <DIO_uint8SetPinDirection+0x18c>
 54a:	88 0f       	add	r24, r24
 54c:	99 1f       	adc	r25, r25
 54e:	0a 94       	dec	r0
 550:	e2 f7       	brpl	.-8      	; 0x54a <DIO_uint8SetPinDirection+0x188>
 552:	84 2b       	or	r24, r20
 554:	8c 93       	st	X, r24
 556:	42 c0       	rjmp	.+132    	; 0x5dc <DIO_uint8SetPinDirection+0x21a>
				break;
			case (DIO_PORT_B):
				SET_BIT(DDRB, PIN);
 558:	a7 e3       	ldi	r26, 0x37	; 55
 55a:	b0 e0       	ldi	r27, 0x00	; 0
 55c:	e7 e3       	ldi	r30, 0x37	; 55
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	80 81       	ld	r24, Z
 562:	48 2f       	mov	r20, r24
 564:	8a 81       	ldd	r24, Y+2	; 0x02
 566:	28 2f       	mov	r18, r24
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	02 2e       	mov	r0, r18
 570:	02 c0       	rjmp	.+4      	; 0x576 <DIO_uint8SetPinDirection+0x1b4>
 572:	88 0f       	add	r24, r24
 574:	99 1f       	adc	r25, r25
 576:	0a 94       	dec	r0
 578:	e2 f7       	brpl	.-8      	; 0x572 <DIO_uint8SetPinDirection+0x1b0>
 57a:	84 2b       	or	r24, r20
 57c:	8c 93       	st	X, r24
 57e:	2e c0       	rjmp	.+92     	; 0x5dc <DIO_uint8SetPinDirection+0x21a>
				break;
			case (DIO_PORT_C):
				SET_BIT(DDRC, PIN);
 580:	a4 e3       	ldi	r26, 0x34	; 52
 582:	b0 e0       	ldi	r27, 0x00	; 0
 584:	e4 e3       	ldi	r30, 0x34	; 52
 586:	f0 e0       	ldi	r31, 0x00	; 0
 588:	80 81       	ld	r24, Z
 58a:	48 2f       	mov	r20, r24
 58c:	8a 81       	ldd	r24, Y+2	; 0x02
 58e:	28 2f       	mov	r18, r24
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	02 2e       	mov	r0, r18
 598:	02 c0       	rjmp	.+4      	; 0x59e <DIO_uint8SetPinDirection+0x1dc>
 59a:	88 0f       	add	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	0a 94       	dec	r0
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <DIO_uint8SetPinDirection+0x1d8>
 5a2:	84 2b       	or	r24, r20
 5a4:	8c 93       	st	X, r24
 5a6:	1a c0       	rjmp	.+52     	; 0x5dc <DIO_uint8SetPinDirection+0x21a>
				break;
			case (DIO_PORT_D):
				SET_BIT(DDRD, PIN);
 5a8:	a1 e3       	ldi	r26, 0x31	; 49
 5aa:	b0 e0       	ldi	r27, 0x00	; 0
 5ac:	e1 e3       	ldi	r30, 0x31	; 49
 5ae:	f0 e0       	ldi	r31, 0x00	; 0
 5b0:	80 81       	ld	r24, Z
 5b2:	48 2f       	mov	r20, r24
 5b4:	8a 81       	ldd	r24, Y+2	; 0x02
 5b6:	28 2f       	mov	r18, r24
 5b8:	30 e0       	ldi	r19, 0x00	; 0
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	02 2e       	mov	r0, r18
 5c0:	02 c0       	rjmp	.+4      	; 0x5c6 <DIO_uint8SetPinDirection+0x204>
 5c2:	88 0f       	add	r24, r24
 5c4:	99 1f       	adc	r25, r25
 5c6:	0a 94       	dec	r0
 5c8:	e2 f7       	brpl	.-8      	; 0x5c2 <DIO_uint8SetPinDirection+0x200>
 5ca:	84 2b       	or	r24, r20
 5cc:	8c 93       	st	X, r24
 5ce:	06 c0       	rjmp	.+12     	; 0x5dc <DIO_uint8SetPinDirection+0x21a>
				break;
			default:
				return P_NOK;
 5d0:	91 e0       	ldi	r25, 0x01	; 1
 5d2:	9e 83       	std	Y+6, r25	; 0x06
 5d4:	07 c0       	rjmp	.+14     	; 0x5e4 <DIO_uint8SetPinDirection+0x222>
			}
			break;

		default:
			return P_NOK;
 5d6:	21 e0       	ldi	r18, 0x01	; 1
 5d8:	2e 83       	std	Y+6, r18	; 0x06
 5da:	04 c0       	rjmp	.+8      	; 0x5e4 <DIO_uint8SetPinDirection+0x222>
		}
	}
	else
		return P_NOK;
	return P_OK;
 5dc:	1e 82       	std	Y+6, r1	; 0x06
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <DIO_uint8SetPinDirection+0x222>
		default:
			return P_NOK;
		}
	}
	else
		return P_NOK;
 5e0:	31 e0       	ldi	r19, 0x01	; 1
 5e2:	3e 83       	std	Y+6, r19	; 0x06
 5e4:	8e 81       	ldd	r24, Y+6	; 0x06
	return P_OK;
}
 5e6:	2a 96       	adiw	r28, 0x0a	; 10
 5e8:	0f b6       	in	r0, 0x3f	; 63
 5ea:	f8 94       	cli
 5ec:	de bf       	out	0x3e, r29	; 62
 5ee:	0f be       	out	0x3f, r0	; 63
 5f0:	cd bf       	out	0x3d, r28	; 61
 5f2:	cf 91       	pop	r28
 5f4:	df 91       	pop	r29
 5f6:	08 95       	ret

000005f8 <DIO_uint8SetPinValue>:
STD_return_t DIO_uint8SetPinValue(DIO_PORT_NUMBER_t PORT, DIO_PIN_NUMBER_t PIN,
		DIO_PIN_VALUE_t VALUE)
{
 5f8:	df 93       	push	r29
 5fa:	cf 93       	push	r28
 5fc:	cd b7       	in	r28, 0x3d	; 61
 5fe:	de b7       	in	r29, 0x3e	; 62
 600:	2a 97       	sbiw	r28, 0x0a	; 10
 602:	0f b6       	in	r0, 0x3f	; 63
 604:	f8 94       	cli
 606:	de bf       	out	0x3e, r29	; 62
 608:	0f be       	out	0x3f, r0	; 63
 60a:	cd bf       	out	0x3d, r28	; 61
 60c:	89 83       	std	Y+1, r24	; 0x01
 60e:	6a 83       	std	Y+2, r22	; 0x02
 610:	4b 83       	std	Y+3, r20	; 0x03

	if ((PIN <= MAX_PIN_NUMBER) && (PIN >= MIN_PIN_NUMBER))
 612:	8a 81       	ldd	r24, Y+2	; 0x02
 614:	88 30       	cpi	r24, 0x08	; 8
 616:	08 f0       	brcs	.+2      	; 0x61a <DIO_uint8SetPinValue+0x22>
 618:	fe c0       	rjmp	.+508    	; 0x816 <DIO_uint8SetPinValue+0x21e>
	{

		switch (VALUE)
 61a:	8b 81       	ldd	r24, Y+3	; 0x03
 61c:	28 2f       	mov	r18, r24
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	3a 87       	std	Y+10, r19	; 0x0a
 622:	29 87       	std	Y+9, r18	; 0x09
 624:	89 85       	ldd	r24, Y+9	; 0x09
 626:	9a 85       	ldd	r25, Y+10	; 0x0a
 628:	00 97       	sbiw	r24, 0x00	; 0
 62a:	39 f0       	breq	.+14     	; 0x63a <DIO_uint8SetPinValue+0x42>
 62c:	29 85       	ldd	r18, Y+9	; 0x09
 62e:	3a 85       	ldd	r19, Y+10	; 0x0a
 630:	21 30       	cpi	r18, 0x01	; 1
 632:	31 05       	cpc	r19, r1
 634:	09 f4       	brne	.+2      	; 0x638 <DIO_uint8SetPinValue+0x40>
 636:	78 c0       	rjmp	.+240    	; 0x728 <DIO_uint8SetPinValue+0x130>
 638:	e9 c0       	rjmp	.+466    	; 0x80c <DIO_uint8SetPinValue+0x214>
		{
		case (DIO_PIN_LOW):
			switch (PORT)
 63a:	89 81       	ldd	r24, Y+1	; 0x01
 63c:	28 2f       	mov	r18, r24
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	38 87       	std	Y+8, r19	; 0x08
 642:	2f 83       	std	Y+7, r18	; 0x07
 644:	8f 81       	ldd	r24, Y+7	; 0x07
 646:	98 85       	ldd	r25, Y+8	; 0x08
 648:	81 30       	cpi	r24, 0x01	; 1
 64a:	91 05       	cpc	r25, r1
 64c:	59 f1       	breq	.+86     	; 0x6a4 <DIO_uint8SetPinValue+0xac>
 64e:	2f 81       	ldd	r18, Y+7	; 0x07
 650:	38 85       	ldd	r19, Y+8	; 0x08
 652:	22 30       	cpi	r18, 0x02	; 2
 654:	31 05       	cpc	r19, r1
 656:	2c f4       	brge	.+10     	; 0x662 <DIO_uint8SetPinValue+0x6a>
 658:	8f 81       	ldd	r24, Y+7	; 0x07
 65a:	98 85       	ldd	r25, Y+8	; 0x08
 65c:	00 97       	sbiw	r24, 0x00	; 0
 65e:	69 f0       	breq	.+26     	; 0x67a <DIO_uint8SetPinValue+0x82>
 660:	60 c0       	rjmp	.+192    	; 0x722 <DIO_uint8SetPinValue+0x12a>
 662:	2f 81       	ldd	r18, Y+7	; 0x07
 664:	38 85       	ldd	r19, Y+8	; 0x08
 666:	22 30       	cpi	r18, 0x02	; 2
 668:	31 05       	cpc	r19, r1
 66a:	89 f1       	breq	.+98     	; 0x6ce <DIO_uint8SetPinValue+0xd6>
 66c:	8f 81       	ldd	r24, Y+7	; 0x07
 66e:	98 85       	ldd	r25, Y+8	; 0x08
 670:	83 30       	cpi	r24, 0x03	; 3
 672:	91 05       	cpc	r25, r1
 674:	09 f4       	brne	.+2      	; 0x678 <DIO_uint8SetPinValue+0x80>
 676:	40 c0       	rjmp	.+128    	; 0x6f8 <DIO_uint8SetPinValue+0x100>
 678:	54 c0       	rjmp	.+168    	; 0x722 <DIO_uint8SetPinValue+0x12a>
			{
			case (DIO_PORT_A):
				CLEAR_BIT(PORTA, PIN);
 67a:	ab e3       	ldi	r26, 0x3B	; 59
 67c:	b0 e0       	ldi	r27, 0x00	; 0
 67e:	eb e3       	ldi	r30, 0x3B	; 59
 680:	f0 e0       	ldi	r31, 0x00	; 0
 682:	80 81       	ld	r24, Z
 684:	48 2f       	mov	r20, r24
 686:	8a 81       	ldd	r24, Y+2	; 0x02
 688:	28 2f       	mov	r18, r24
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	81 e0       	ldi	r24, 0x01	; 1
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	02 2e       	mov	r0, r18
 692:	02 c0       	rjmp	.+4      	; 0x698 <DIO_uint8SetPinValue+0xa0>
 694:	88 0f       	add	r24, r24
 696:	99 1f       	adc	r25, r25
 698:	0a 94       	dec	r0
 69a:	e2 f7       	brpl	.-8      	; 0x694 <DIO_uint8SetPinValue+0x9c>
 69c:	80 95       	com	r24
 69e:	84 23       	and	r24, r20
 6a0:	8c 93       	st	X, r24
 6a2:	b7 c0       	rjmp	.+366    	; 0x812 <DIO_uint8SetPinValue+0x21a>
				break;
			case (DIO_PORT_B):
				CLEAR_BIT(PORTB, PIN);
 6a4:	a8 e3       	ldi	r26, 0x38	; 56
 6a6:	b0 e0       	ldi	r27, 0x00	; 0
 6a8:	e8 e3       	ldi	r30, 0x38	; 56
 6aa:	f0 e0       	ldi	r31, 0x00	; 0
 6ac:	80 81       	ld	r24, Z
 6ae:	48 2f       	mov	r20, r24
 6b0:	8a 81       	ldd	r24, Y+2	; 0x02
 6b2:	28 2f       	mov	r18, r24
 6b4:	30 e0       	ldi	r19, 0x00	; 0
 6b6:	81 e0       	ldi	r24, 0x01	; 1
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	02 2e       	mov	r0, r18
 6bc:	02 c0       	rjmp	.+4      	; 0x6c2 <DIO_uint8SetPinValue+0xca>
 6be:	88 0f       	add	r24, r24
 6c0:	99 1f       	adc	r25, r25
 6c2:	0a 94       	dec	r0
 6c4:	e2 f7       	brpl	.-8      	; 0x6be <DIO_uint8SetPinValue+0xc6>
 6c6:	80 95       	com	r24
 6c8:	84 23       	and	r24, r20
 6ca:	8c 93       	st	X, r24
 6cc:	a2 c0       	rjmp	.+324    	; 0x812 <DIO_uint8SetPinValue+0x21a>
				break;
			case (DIO_PORT_C):
				CLEAR_BIT(PORTC, PIN);
 6ce:	a5 e3       	ldi	r26, 0x35	; 53
 6d0:	b0 e0       	ldi	r27, 0x00	; 0
 6d2:	e5 e3       	ldi	r30, 0x35	; 53
 6d4:	f0 e0       	ldi	r31, 0x00	; 0
 6d6:	80 81       	ld	r24, Z
 6d8:	48 2f       	mov	r20, r24
 6da:	8a 81       	ldd	r24, Y+2	; 0x02
 6dc:	28 2f       	mov	r18, r24
 6de:	30 e0       	ldi	r19, 0x00	; 0
 6e0:	81 e0       	ldi	r24, 0x01	; 1
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	02 2e       	mov	r0, r18
 6e6:	02 c0       	rjmp	.+4      	; 0x6ec <DIO_uint8SetPinValue+0xf4>
 6e8:	88 0f       	add	r24, r24
 6ea:	99 1f       	adc	r25, r25
 6ec:	0a 94       	dec	r0
 6ee:	e2 f7       	brpl	.-8      	; 0x6e8 <DIO_uint8SetPinValue+0xf0>
 6f0:	80 95       	com	r24
 6f2:	84 23       	and	r24, r20
 6f4:	8c 93       	st	X, r24
 6f6:	8d c0       	rjmp	.+282    	; 0x812 <DIO_uint8SetPinValue+0x21a>
				break;
			case (DIO_PORT_D):
				CLEAR_BIT(PORTD, PIN);
 6f8:	a2 e3       	ldi	r26, 0x32	; 50
 6fa:	b0 e0       	ldi	r27, 0x00	; 0
 6fc:	e2 e3       	ldi	r30, 0x32	; 50
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	80 81       	ld	r24, Z
 702:	48 2f       	mov	r20, r24
 704:	8a 81       	ldd	r24, Y+2	; 0x02
 706:	28 2f       	mov	r18, r24
 708:	30 e0       	ldi	r19, 0x00	; 0
 70a:	81 e0       	ldi	r24, 0x01	; 1
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	02 2e       	mov	r0, r18
 710:	02 c0       	rjmp	.+4      	; 0x716 <DIO_uint8SetPinValue+0x11e>
 712:	88 0f       	add	r24, r24
 714:	99 1f       	adc	r25, r25
 716:	0a 94       	dec	r0
 718:	e2 f7       	brpl	.-8      	; 0x712 <DIO_uint8SetPinValue+0x11a>
 71a:	80 95       	com	r24
 71c:	84 23       	and	r24, r20
 71e:	8c 93       	st	X, r24
 720:	78 c0       	rjmp	.+240    	; 0x812 <DIO_uint8SetPinValue+0x21a>
				break;
			default:
				return P_NOK;
 722:	91 e0       	ldi	r25, 0x01	; 1
 724:	9e 83       	std	Y+6, r25	; 0x06
 726:	79 c0       	rjmp	.+242    	; 0x81a <DIO_uint8SetPinValue+0x222>
			}
			break;
		case (DIO_PIN_HIGH):
			switch (PORT)
 728:	89 81       	ldd	r24, Y+1	; 0x01
 72a:	28 2f       	mov	r18, r24
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	3d 83       	std	Y+5, r19	; 0x05
 730:	2c 83       	std	Y+4, r18	; 0x04
 732:	8c 81       	ldd	r24, Y+4	; 0x04
 734:	9d 81       	ldd	r25, Y+5	; 0x05
 736:	81 30       	cpi	r24, 0x01	; 1
 738:	91 05       	cpc	r25, r1
 73a:	49 f1       	breq	.+82     	; 0x78e <DIO_uint8SetPinValue+0x196>
 73c:	2c 81       	ldd	r18, Y+4	; 0x04
 73e:	3d 81       	ldd	r19, Y+5	; 0x05
 740:	22 30       	cpi	r18, 0x02	; 2
 742:	31 05       	cpc	r19, r1
 744:	2c f4       	brge	.+10     	; 0x750 <DIO_uint8SetPinValue+0x158>
 746:	8c 81       	ldd	r24, Y+4	; 0x04
 748:	9d 81       	ldd	r25, Y+5	; 0x05
 74a:	00 97       	sbiw	r24, 0x00	; 0
 74c:	61 f0       	breq	.+24     	; 0x766 <DIO_uint8SetPinValue+0x16e>
 74e:	5b c0       	rjmp	.+182    	; 0x806 <DIO_uint8SetPinValue+0x20e>
 750:	2c 81       	ldd	r18, Y+4	; 0x04
 752:	3d 81       	ldd	r19, Y+5	; 0x05
 754:	22 30       	cpi	r18, 0x02	; 2
 756:	31 05       	cpc	r19, r1
 758:	71 f1       	breq	.+92     	; 0x7b6 <DIO_uint8SetPinValue+0x1be>
 75a:	8c 81       	ldd	r24, Y+4	; 0x04
 75c:	9d 81       	ldd	r25, Y+5	; 0x05
 75e:	83 30       	cpi	r24, 0x03	; 3
 760:	91 05       	cpc	r25, r1
 762:	e9 f1       	breq	.+122    	; 0x7de <DIO_uint8SetPinValue+0x1e6>
 764:	50 c0       	rjmp	.+160    	; 0x806 <DIO_uint8SetPinValue+0x20e>
			{
			case (DIO_PORT_A):
				SET_BIT(PORTA, PIN);
 766:	ab e3       	ldi	r26, 0x3B	; 59
 768:	b0 e0       	ldi	r27, 0x00	; 0
 76a:	eb e3       	ldi	r30, 0x3B	; 59
 76c:	f0 e0       	ldi	r31, 0x00	; 0
 76e:	80 81       	ld	r24, Z
 770:	48 2f       	mov	r20, r24
 772:	8a 81       	ldd	r24, Y+2	; 0x02
 774:	28 2f       	mov	r18, r24
 776:	30 e0       	ldi	r19, 0x00	; 0
 778:	81 e0       	ldi	r24, 0x01	; 1
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	02 2e       	mov	r0, r18
 77e:	02 c0       	rjmp	.+4      	; 0x784 <DIO_uint8SetPinValue+0x18c>
 780:	88 0f       	add	r24, r24
 782:	99 1f       	adc	r25, r25
 784:	0a 94       	dec	r0
 786:	e2 f7       	brpl	.-8      	; 0x780 <DIO_uint8SetPinValue+0x188>
 788:	84 2b       	or	r24, r20
 78a:	8c 93       	st	X, r24
 78c:	42 c0       	rjmp	.+132    	; 0x812 <DIO_uint8SetPinValue+0x21a>
				break;
			case (DIO_PORT_B):
				SET_BIT(PORTB, PIN);
 78e:	a8 e3       	ldi	r26, 0x38	; 56
 790:	b0 e0       	ldi	r27, 0x00	; 0
 792:	e8 e3       	ldi	r30, 0x38	; 56
 794:	f0 e0       	ldi	r31, 0x00	; 0
 796:	80 81       	ld	r24, Z
 798:	48 2f       	mov	r20, r24
 79a:	8a 81       	ldd	r24, Y+2	; 0x02
 79c:	28 2f       	mov	r18, r24
 79e:	30 e0       	ldi	r19, 0x00	; 0
 7a0:	81 e0       	ldi	r24, 0x01	; 1
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	02 2e       	mov	r0, r18
 7a6:	02 c0       	rjmp	.+4      	; 0x7ac <DIO_uint8SetPinValue+0x1b4>
 7a8:	88 0f       	add	r24, r24
 7aa:	99 1f       	adc	r25, r25
 7ac:	0a 94       	dec	r0
 7ae:	e2 f7       	brpl	.-8      	; 0x7a8 <DIO_uint8SetPinValue+0x1b0>
 7b0:	84 2b       	or	r24, r20
 7b2:	8c 93       	st	X, r24
 7b4:	2e c0       	rjmp	.+92     	; 0x812 <DIO_uint8SetPinValue+0x21a>
				break;
			case (DIO_PORT_C):
				SET_BIT(PORTC, PIN);
 7b6:	a5 e3       	ldi	r26, 0x35	; 53
 7b8:	b0 e0       	ldi	r27, 0x00	; 0
 7ba:	e5 e3       	ldi	r30, 0x35	; 53
 7bc:	f0 e0       	ldi	r31, 0x00	; 0
 7be:	80 81       	ld	r24, Z
 7c0:	48 2f       	mov	r20, r24
 7c2:	8a 81       	ldd	r24, Y+2	; 0x02
 7c4:	28 2f       	mov	r18, r24
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	81 e0       	ldi	r24, 0x01	; 1
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	02 2e       	mov	r0, r18
 7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <DIO_uint8SetPinValue+0x1dc>
 7d0:	88 0f       	add	r24, r24
 7d2:	99 1f       	adc	r25, r25
 7d4:	0a 94       	dec	r0
 7d6:	e2 f7       	brpl	.-8      	; 0x7d0 <DIO_uint8SetPinValue+0x1d8>
 7d8:	84 2b       	or	r24, r20
 7da:	8c 93       	st	X, r24
 7dc:	1a c0       	rjmp	.+52     	; 0x812 <DIO_uint8SetPinValue+0x21a>
				break;
			case (DIO_PORT_D):
				SET_BIT(PORTD, PIN);
 7de:	a2 e3       	ldi	r26, 0x32	; 50
 7e0:	b0 e0       	ldi	r27, 0x00	; 0
 7e2:	e2 e3       	ldi	r30, 0x32	; 50
 7e4:	f0 e0       	ldi	r31, 0x00	; 0
 7e6:	80 81       	ld	r24, Z
 7e8:	48 2f       	mov	r20, r24
 7ea:	8a 81       	ldd	r24, Y+2	; 0x02
 7ec:	28 2f       	mov	r18, r24
 7ee:	30 e0       	ldi	r19, 0x00	; 0
 7f0:	81 e0       	ldi	r24, 0x01	; 1
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	02 2e       	mov	r0, r18
 7f6:	02 c0       	rjmp	.+4      	; 0x7fc <DIO_uint8SetPinValue+0x204>
 7f8:	88 0f       	add	r24, r24
 7fa:	99 1f       	adc	r25, r25
 7fc:	0a 94       	dec	r0
 7fe:	e2 f7       	brpl	.-8      	; 0x7f8 <DIO_uint8SetPinValue+0x200>
 800:	84 2b       	or	r24, r20
 802:	8c 93       	st	X, r24
 804:	06 c0       	rjmp	.+12     	; 0x812 <DIO_uint8SetPinValue+0x21a>
				break;
			default:
				return P_NOK;
 806:	91 e0       	ldi	r25, 0x01	; 1
 808:	9e 83       	std	Y+6, r25	; 0x06
 80a:	07 c0       	rjmp	.+14     	; 0x81a <DIO_uint8SetPinValue+0x222>
			}
			break;
		default:
			return P_NOK;
 80c:	21 e0       	ldi	r18, 0x01	; 1
 80e:	2e 83       	std	Y+6, r18	; 0x06
 810:	04 c0       	rjmp	.+8      	; 0x81a <DIO_uint8SetPinValue+0x222>
		}
	}
	else
		return P_NOK;
	return P_OK;
 812:	1e 82       	std	Y+6, r1	; 0x06
 814:	02 c0       	rjmp	.+4      	; 0x81a <DIO_uint8SetPinValue+0x222>
		default:
			return P_NOK;
		}
	}
	else
		return P_NOK;
 816:	31 e0       	ldi	r19, 0x01	; 1
 818:	3e 83       	std	Y+6, r19	; 0x06
 81a:	8e 81       	ldd	r24, Y+6	; 0x06
	return P_OK;
}
 81c:	2a 96       	adiw	r28, 0x0a	; 10
 81e:	0f b6       	in	r0, 0x3f	; 63
 820:	f8 94       	cli
 822:	de bf       	out	0x3e, r29	; 62
 824:	0f be       	out	0x3f, r0	; 63
 826:	cd bf       	out	0x3d, r28	; 61
 828:	cf 91       	pop	r28
 82a:	df 91       	pop	r29
 82c:	08 95       	ret

0000082e <DIO_uint8SetPortDirection>:

STD_return_t DIO_uint8SetPortDirection(DIO_PORT_NUMBER_t PORT,
		DIO_PORT_DIRECTION_t DIRECTION)
{
 82e:	df 93       	push	r29
 830:	cf 93       	push	r28
 832:	cd b7       	in	r28, 0x3d	; 61
 834:	de b7       	in	r29, 0x3e	; 62
 836:	29 97       	sbiw	r28, 0x09	; 9
 838:	0f b6       	in	r0, 0x3f	; 63
 83a:	f8 94       	cli
 83c:	de bf       	out	0x3e, r29	; 62
 83e:	0f be       	out	0x3f, r0	; 63
 840:	cd bf       	out	0x3d, r28	; 61
 842:	89 83       	std	Y+1, r24	; 0x01
 844:	6a 83       	std	Y+2, r22	; 0x02

	switch (DIRECTION)
 846:	8a 81       	ldd	r24, Y+2	; 0x02
 848:	28 2f       	mov	r18, r24
 84a:	30 e0       	ldi	r19, 0x00	; 0
 84c:	39 87       	std	Y+9, r19	; 0x09
 84e:	28 87       	std	Y+8, r18	; 0x08
 850:	88 85       	ldd	r24, Y+8	; 0x08
 852:	99 85       	ldd	r25, Y+9	; 0x09
 854:	00 97       	sbiw	r24, 0x00	; 0
 856:	31 f0       	breq	.+12     	; 0x864 <__stack+0x5>
 858:	28 85       	ldd	r18, Y+8	; 0x08
 85a:	39 85       	ldd	r19, Y+9	; 0x09
 85c:	21 30       	cpi	r18, 0x01	; 1
 85e:	31 05       	cpc	r19, r1
 860:	99 f1       	breq	.+102    	; 0x8c8 <__stack+0x69>
 862:	68 c0       	rjmp	.+208    	; 0x934 <__stack+0xd5>
	{

	case DIO_PORT_LOW:
		switch (PORT)
 864:	89 81       	ldd	r24, Y+1	; 0x01
 866:	28 2f       	mov	r18, r24
 868:	30 e0       	ldi	r19, 0x00	; 0
 86a:	3f 83       	std	Y+7, r19	; 0x07
 86c:	2e 83       	std	Y+6, r18	; 0x06
 86e:	8e 81       	ldd	r24, Y+6	; 0x06
 870:	9f 81       	ldd	r25, Y+7	; 0x07
 872:	81 30       	cpi	r24, 0x01	; 1
 874:	91 05       	cpc	r25, r1
 876:	c9 f0       	breq	.+50     	; 0x8aa <__stack+0x4b>
 878:	2e 81       	ldd	r18, Y+6	; 0x06
 87a:	3f 81       	ldd	r19, Y+7	; 0x07
 87c:	22 30       	cpi	r18, 0x02	; 2
 87e:	31 05       	cpc	r19, r1
 880:	2c f4       	brge	.+10     	; 0x88c <__stack+0x2d>
 882:	8e 81       	ldd	r24, Y+6	; 0x06
 884:	9f 81       	ldd	r25, Y+7	; 0x07
 886:	00 97       	sbiw	r24, 0x00	; 0
 888:	61 f0       	breq	.+24     	; 0x8a2 <__stack+0x43>
 88a:	1b c0       	rjmp	.+54     	; 0x8c2 <__stack+0x63>
 88c:	2e 81       	ldd	r18, Y+6	; 0x06
 88e:	3f 81       	ldd	r19, Y+7	; 0x07
 890:	22 30       	cpi	r18, 0x02	; 2
 892:	31 05       	cpc	r19, r1
 894:	71 f0       	breq	.+28     	; 0x8b2 <__stack+0x53>
 896:	8e 81       	ldd	r24, Y+6	; 0x06
 898:	9f 81       	ldd	r25, Y+7	; 0x07
 89a:	83 30       	cpi	r24, 0x03	; 3
 89c:	91 05       	cpc	r25, r1
 89e:	69 f0       	breq	.+26     	; 0x8ba <__stack+0x5b>
 8a0:	10 c0       	rjmp	.+32     	; 0x8c2 <__stack+0x63>
		{
		case (DIO_PORT_A):
			DDRA = 0;
 8a2:	ea e3       	ldi	r30, 0x3A	; 58
 8a4:	f0 e0       	ldi	r31, 0x00	; 0
 8a6:	10 82       	st	Z, r1
 8a8:	48 c0       	rjmp	.+144    	; 0x93a <__stack+0xdb>
			break;
		case (DIO_PORT_B):
			DDRB = 0;
 8aa:	e7 e3       	ldi	r30, 0x37	; 55
 8ac:	f0 e0       	ldi	r31, 0x00	; 0
 8ae:	10 82       	st	Z, r1
 8b0:	44 c0       	rjmp	.+136    	; 0x93a <__stack+0xdb>
			break;
		case (DIO_PORT_C):
			DDRC = 0;
 8b2:	e4 e3       	ldi	r30, 0x34	; 52
 8b4:	f0 e0       	ldi	r31, 0x00	; 0
 8b6:	10 82       	st	Z, r1
 8b8:	40 c0       	rjmp	.+128    	; 0x93a <__stack+0xdb>
			break;
		case (DIO_PORT_D):
			DDRD = 0;
 8ba:	e1 e3       	ldi	r30, 0x31	; 49
 8bc:	f0 e0       	ldi	r31, 0x00	; 0
 8be:	10 82       	st	Z, r1
 8c0:	3c c0       	rjmp	.+120    	; 0x93a <__stack+0xdb>
			break;
		default:
			return P_NOK;
 8c2:	91 e0       	ldi	r25, 0x01	; 1
 8c4:	9d 83       	std	Y+5, r25	; 0x05
 8c6:	3a c0       	rjmp	.+116    	; 0x93c <__stack+0xdd>
		}
		break;

	case DIO_PORT_HIGH:
		switch (PORT)
 8c8:	89 81       	ldd	r24, Y+1	; 0x01
 8ca:	28 2f       	mov	r18, r24
 8cc:	30 e0       	ldi	r19, 0x00	; 0
 8ce:	3c 83       	std	Y+4, r19	; 0x04
 8d0:	2b 83       	std	Y+3, r18	; 0x03
 8d2:	8b 81       	ldd	r24, Y+3	; 0x03
 8d4:	9c 81       	ldd	r25, Y+4	; 0x04
 8d6:	81 30       	cpi	r24, 0x01	; 1
 8d8:	91 05       	cpc	r25, r1
 8da:	d1 f0       	breq	.+52     	; 0x910 <__stack+0xb1>
 8dc:	2b 81       	ldd	r18, Y+3	; 0x03
 8de:	3c 81       	ldd	r19, Y+4	; 0x04
 8e0:	22 30       	cpi	r18, 0x02	; 2
 8e2:	31 05       	cpc	r19, r1
 8e4:	2c f4       	brge	.+10     	; 0x8f0 <__stack+0x91>
 8e6:	8b 81       	ldd	r24, Y+3	; 0x03
 8e8:	9c 81       	ldd	r25, Y+4	; 0x04
 8ea:	00 97       	sbiw	r24, 0x00	; 0
 8ec:	61 f0       	breq	.+24     	; 0x906 <__stack+0xa7>
 8ee:	1f c0       	rjmp	.+62     	; 0x92e <__stack+0xcf>
 8f0:	2b 81       	ldd	r18, Y+3	; 0x03
 8f2:	3c 81       	ldd	r19, Y+4	; 0x04
 8f4:	22 30       	cpi	r18, 0x02	; 2
 8f6:	31 05       	cpc	r19, r1
 8f8:	81 f0       	breq	.+32     	; 0x91a <__stack+0xbb>
 8fa:	8b 81       	ldd	r24, Y+3	; 0x03
 8fc:	9c 81       	ldd	r25, Y+4	; 0x04
 8fe:	83 30       	cpi	r24, 0x03	; 3
 900:	91 05       	cpc	r25, r1
 902:	81 f0       	breq	.+32     	; 0x924 <__stack+0xc5>
 904:	14 c0       	rjmp	.+40     	; 0x92e <__stack+0xcf>
		{
		case (DIO_PORT_A):
			DDRA = 0XFF;
 906:	ea e3       	ldi	r30, 0x3A	; 58
 908:	f0 e0       	ldi	r31, 0x00	; 0
 90a:	8f ef       	ldi	r24, 0xFF	; 255
 90c:	80 83       	st	Z, r24
 90e:	15 c0       	rjmp	.+42     	; 0x93a <__stack+0xdb>
			break;
		case (DIO_PORT_B):
			DDRB = 0XFF;
 910:	e7 e3       	ldi	r30, 0x37	; 55
 912:	f0 e0       	ldi	r31, 0x00	; 0
 914:	8f ef       	ldi	r24, 0xFF	; 255
 916:	80 83       	st	Z, r24
 918:	10 c0       	rjmp	.+32     	; 0x93a <__stack+0xdb>
			break;
		case (DIO_PORT_C):
			DDRC = 0XFF;
 91a:	e4 e3       	ldi	r30, 0x34	; 52
 91c:	f0 e0       	ldi	r31, 0x00	; 0
 91e:	8f ef       	ldi	r24, 0xFF	; 255
 920:	80 83       	st	Z, r24
 922:	0b c0       	rjmp	.+22     	; 0x93a <__stack+0xdb>
			break;
		case (DIO_PORT_D):
			DDRD = 0XFF;
 924:	e1 e3       	ldi	r30, 0x31	; 49
 926:	f0 e0       	ldi	r31, 0x00	; 0
 928:	8f ef       	ldi	r24, 0xFF	; 255
 92a:	80 83       	st	Z, r24
 92c:	06 c0       	rjmp	.+12     	; 0x93a <__stack+0xdb>
			break;
		default:
			return P_NOK;
 92e:	91 e0       	ldi	r25, 0x01	; 1
 930:	9d 83       	std	Y+5, r25	; 0x05
 932:	04 c0       	rjmp	.+8      	; 0x93c <__stack+0xdd>
			break;
		}
		break;

	default:
		return P_NOK;
 934:	21 e0       	ldi	r18, 0x01	; 1
 936:	2d 83       	std	Y+5, r18	; 0x05
 938:	01 c0       	rjmp	.+2      	; 0x93c <__stack+0xdd>
	}
	return P_OK;
 93a:	1d 82       	std	Y+5, r1	; 0x05
 93c:	8d 81       	ldd	r24, Y+5	; 0x05
}
 93e:	29 96       	adiw	r28, 0x09	; 9
 940:	0f b6       	in	r0, 0x3f	; 63
 942:	f8 94       	cli
 944:	de bf       	out	0x3e, r29	; 62
 946:	0f be       	out	0x3f, r0	; 63
 948:	cd bf       	out	0x3d, r28	; 61
 94a:	cf 91       	pop	r28
 94c:	df 91       	pop	r29
 94e:	08 95       	ret

00000950 <DIO_uint8SetPortValue>:
STD_return_t DIO_uint8SetPortValue(DIO_PORT_NUMBER_t PORT, uint8 VALUE)
{
 950:	df 93       	push	r29
 952:	cf 93       	push	r28
 954:	00 d0       	rcall	.+0      	; 0x956 <DIO_uint8SetPortValue+0x6>
 956:	00 d0       	rcall	.+0      	; 0x958 <DIO_uint8SetPortValue+0x8>
 958:	0f 92       	push	r0
 95a:	cd b7       	in	r28, 0x3d	; 61
 95c:	de b7       	in	r29, 0x3e	; 62
 95e:	89 83       	std	Y+1, r24	; 0x01
 960:	6a 83       	std	Y+2, r22	; 0x02

	switch (PORT)
 962:	89 81       	ldd	r24, Y+1	; 0x01
 964:	28 2f       	mov	r18, r24
 966:	30 e0       	ldi	r19, 0x00	; 0
 968:	3d 83       	std	Y+5, r19	; 0x05
 96a:	2c 83       	std	Y+4, r18	; 0x04
 96c:	8c 81       	ldd	r24, Y+4	; 0x04
 96e:	9d 81       	ldd	r25, Y+5	; 0x05
 970:	81 30       	cpi	r24, 0x01	; 1
 972:	91 05       	cpc	r25, r1
 974:	d1 f0       	breq	.+52     	; 0x9aa <DIO_uint8SetPortValue+0x5a>
 976:	2c 81       	ldd	r18, Y+4	; 0x04
 978:	3d 81       	ldd	r19, Y+5	; 0x05
 97a:	22 30       	cpi	r18, 0x02	; 2
 97c:	31 05       	cpc	r19, r1
 97e:	2c f4       	brge	.+10     	; 0x98a <DIO_uint8SetPortValue+0x3a>
 980:	8c 81       	ldd	r24, Y+4	; 0x04
 982:	9d 81       	ldd	r25, Y+5	; 0x05
 984:	00 97       	sbiw	r24, 0x00	; 0
 986:	61 f0       	breq	.+24     	; 0x9a0 <DIO_uint8SetPortValue+0x50>
 988:	1f c0       	rjmp	.+62     	; 0x9c8 <DIO_uint8SetPortValue+0x78>
 98a:	2c 81       	ldd	r18, Y+4	; 0x04
 98c:	3d 81       	ldd	r19, Y+5	; 0x05
 98e:	22 30       	cpi	r18, 0x02	; 2
 990:	31 05       	cpc	r19, r1
 992:	81 f0       	breq	.+32     	; 0x9b4 <DIO_uint8SetPortValue+0x64>
 994:	8c 81       	ldd	r24, Y+4	; 0x04
 996:	9d 81       	ldd	r25, Y+5	; 0x05
 998:	83 30       	cpi	r24, 0x03	; 3
 99a:	91 05       	cpc	r25, r1
 99c:	81 f0       	breq	.+32     	; 0x9be <DIO_uint8SetPortValue+0x6e>
 99e:	14 c0       	rjmp	.+40     	; 0x9c8 <DIO_uint8SetPortValue+0x78>
	{
	case (DIO_PORT_A):
		PORTA = VALUE;
 9a0:	eb e3       	ldi	r30, 0x3B	; 59
 9a2:	f0 e0       	ldi	r31, 0x00	; 0
 9a4:	8a 81       	ldd	r24, Y+2	; 0x02
 9a6:	80 83       	st	Z, r24
 9a8:	12 c0       	rjmp	.+36     	; 0x9ce <DIO_uint8SetPortValue+0x7e>
		break;
	case (DIO_PORT_B):
		PORTB = VALUE;
 9aa:	e8 e3       	ldi	r30, 0x38	; 56
 9ac:	f0 e0       	ldi	r31, 0x00	; 0
 9ae:	8a 81       	ldd	r24, Y+2	; 0x02
 9b0:	80 83       	st	Z, r24
 9b2:	0d c0       	rjmp	.+26     	; 0x9ce <DIO_uint8SetPortValue+0x7e>
		break;
	case (DIO_PORT_C):
		PORTC = VALUE;
 9b4:	e5 e3       	ldi	r30, 0x35	; 53
 9b6:	f0 e0       	ldi	r31, 0x00	; 0
 9b8:	8a 81       	ldd	r24, Y+2	; 0x02
 9ba:	80 83       	st	Z, r24
 9bc:	08 c0       	rjmp	.+16     	; 0x9ce <DIO_uint8SetPortValue+0x7e>
		break;
	case (DIO_PORT_D):
		PORTD = VALUE;
 9be:	e2 e3       	ldi	r30, 0x32	; 50
 9c0:	f0 e0       	ldi	r31, 0x00	; 0
 9c2:	8a 81       	ldd	r24, Y+2	; 0x02
 9c4:	80 83       	st	Z, r24
 9c6:	03 c0       	rjmp	.+6      	; 0x9ce <DIO_uint8SetPortValue+0x7e>
		break;
	default:
		return P_NOK;
 9c8:	91 e0       	ldi	r25, 0x01	; 1
 9ca:	9b 83       	std	Y+3, r25	; 0x03
 9cc:	01 c0       	rjmp	.+2      	; 0x9d0 <DIO_uint8SetPortValue+0x80>
	}
	return P_OK;
 9ce:	1b 82       	std	Y+3, r1	; 0x03
 9d0:	8b 81       	ldd	r24, Y+3	; 0x03
}
 9d2:	0f 90       	pop	r0
 9d4:	0f 90       	pop	r0
 9d6:	0f 90       	pop	r0
 9d8:	0f 90       	pop	r0
 9da:	0f 90       	pop	r0
 9dc:	cf 91       	pop	r28
 9de:	df 91       	pop	r29
 9e0:	08 95       	ret

000009e2 <DIO_uint8ReadPinValue>:

STD_return_t DIO_uint8ReadPinValue(DIO_PORT_NUMBER_t PORT, DIO_PIN_NUMBER_t PIN,
		uint8 *VALUE)
{
 9e2:	df 93       	push	r29
 9e4:	cf 93       	push	r28
 9e6:	cd b7       	in	r28, 0x3d	; 61
 9e8:	de b7       	in	r29, 0x3e	; 62
 9ea:	27 97       	sbiw	r28, 0x07	; 7
 9ec:	0f b6       	in	r0, 0x3f	; 63
 9ee:	f8 94       	cli
 9f0:	de bf       	out	0x3e, r29	; 62
 9f2:	0f be       	out	0x3f, r0	; 63
 9f4:	cd bf       	out	0x3d, r28	; 61
 9f6:	89 83       	std	Y+1, r24	; 0x01
 9f8:	6a 83       	std	Y+2, r22	; 0x02
 9fa:	5c 83       	std	Y+4, r21	; 0x04
 9fc:	4b 83       	std	Y+3, r20	; 0x03
	if ((PIN <= MAX_PIN_NUMBER) && (PIN >= MIN_PIN_NUMBER))
 9fe:	8a 81       	ldd	r24, Y+2	; 0x02
 a00:	88 30       	cpi	r24, 0x08	; 8
 a02:	08 f0       	brcs	.+2      	; 0xa06 <DIO_uint8ReadPinValue+0x24>
 a04:	76 c0       	rjmp	.+236    	; 0xaf2 <DIO_uint8ReadPinValue+0x110>
	{
		switch (PORT)
 a06:	89 81       	ldd	r24, Y+1	; 0x01
 a08:	28 2f       	mov	r18, r24
 a0a:	30 e0       	ldi	r19, 0x00	; 0
 a0c:	3f 83       	std	Y+7, r19	; 0x07
 a0e:	2e 83       	std	Y+6, r18	; 0x06
 a10:	4e 81       	ldd	r20, Y+6	; 0x06
 a12:	5f 81       	ldd	r21, Y+7	; 0x07
 a14:	41 30       	cpi	r20, 0x01	; 1
 a16:	51 05       	cpc	r21, r1
 a18:	59 f1       	breq	.+86     	; 0xa70 <DIO_uint8ReadPinValue+0x8e>
 a1a:	8e 81       	ldd	r24, Y+6	; 0x06
 a1c:	9f 81       	ldd	r25, Y+7	; 0x07
 a1e:	82 30       	cpi	r24, 0x02	; 2
 a20:	91 05       	cpc	r25, r1
 a22:	34 f4       	brge	.+12     	; 0xa30 <DIO_uint8ReadPinValue+0x4e>
 a24:	2e 81       	ldd	r18, Y+6	; 0x06
 a26:	3f 81       	ldd	r19, Y+7	; 0x07
 a28:	21 15       	cp	r18, r1
 a2a:	31 05       	cpc	r19, r1
 a2c:	69 f0       	breq	.+26     	; 0xa48 <DIO_uint8ReadPinValue+0x66>
 a2e:	5c c0       	rjmp	.+184    	; 0xae8 <DIO_uint8ReadPinValue+0x106>
 a30:	4e 81       	ldd	r20, Y+6	; 0x06
 a32:	5f 81       	ldd	r21, Y+7	; 0x07
 a34:	42 30       	cpi	r20, 0x02	; 2
 a36:	51 05       	cpc	r21, r1
 a38:	79 f1       	breq	.+94     	; 0xa98 <DIO_uint8ReadPinValue+0xb6>
 a3a:	8e 81       	ldd	r24, Y+6	; 0x06
 a3c:	9f 81       	ldd	r25, Y+7	; 0x07
 a3e:	83 30       	cpi	r24, 0x03	; 3
 a40:	91 05       	cpc	r25, r1
 a42:	09 f4       	brne	.+2      	; 0xa46 <DIO_uint8ReadPinValue+0x64>
 a44:	3d c0       	rjmp	.+122    	; 0xac0 <DIO_uint8ReadPinValue+0xde>
 a46:	50 c0       	rjmp	.+160    	; 0xae8 <DIO_uint8ReadPinValue+0x106>
		{
		case DIO_PORT_A:
			*VALUE = READ_BIT(PINA, PIN);
 a48:	e9 e3       	ldi	r30, 0x39	; 57
 a4a:	f0 e0       	ldi	r31, 0x00	; 0
 a4c:	80 81       	ld	r24, Z
 a4e:	28 2f       	mov	r18, r24
 a50:	30 e0       	ldi	r19, 0x00	; 0
 a52:	8a 81       	ldd	r24, Y+2	; 0x02
 a54:	88 2f       	mov	r24, r24
 a56:	90 e0       	ldi	r25, 0x00	; 0
 a58:	a9 01       	movw	r20, r18
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <DIO_uint8ReadPinValue+0x7e>
 a5c:	55 95       	asr	r21
 a5e:	47 95       	ror	r20
 a60:	8a 95       	dec	r24
 a62:	e2 f7       	brpl	.-8      	; 0xa5c <DIO_uint8ReadPinValue+0x7a>
 a64:	ca 01       	movw	r24, r20
 a66:	81 70       	andi	r24, 0x01	; 1
 a68:	eb 81       	ldd	r30, Y+3	; 0x03
 a6a:	fc 81       	ldd	r31, Y+4	; 0x04
 a6c:	80 83       	st	Z, r24
 a6e:	3f c0       	rjmp	.+126    	; 0xaee <DIO_uint8ReadPinValue+0x10c>
			break;
		case DIO_PORT_B:
			*VALUE = READ_BIT(PINB, PIN);
 a70:	e6 e3       	ldi	r30, 0x36	; 54
 a72:	f0 e0       	ldi	r31, 0x00	; 0
 a74:	80 81       	ld	r24, Z
 a76:	28 2f       	mov	r18, r24
 a78:	30 e0       	ldi	r19, 0x00	; 0
 a7a:	8a 81       	ldd	r24, Y+2	; 0x02
 a7c:	88 2f       	mov	r24, r24
 a7e:	90 e0       	ldi	r25, 0x00	; 0
 a80:	a9 01       	movw	r20, r18
 a82:	02 c0       	rjmp	.+4      	; 0xa88 <DIO_uint8ReadPinValue+0xa6>
 a84:	55 95       	asr	r21
 a86:	47 95       	ror	r20
 a88:	8a 95       	dec	r24
 a8a:	e2 f7       	brpl	.-8      	; 0xa84 <DIO_uint8ReadPinValue+0xa2>
 a8c:	ca 01       	movw	r24, r20
 a8e:	81 70       	andi	r24, 0x01	; 1
 a90:	eb 81       	ldd	r30, Y+3	; 0x03
 a92:	fc 81       	ldd	r31, Y+4	; 0x04
 a94:	80 83       	st	Z, r24
 a96:	2b c0       	rjmp	.+86     	; 0xaee <DIO_uint8ReadPinValue+0x10c>
			break;
		case DIO_PORT_C:
			*VALUE = READ_BIT(PINC, PIN);
 a98:	e3 e3       	ldi	r30, 0x33	; 51
 a9a:	f0 e0       	ldi	r31, 0x00	; 0
 a9c:	80 81       	ld	r24, Z
 a9e:	28 2f       	mov	r18, r24
 aa0:	30 e0       	ldi	r19, 0x00	; 0
 aa2:	8a 81       	ldd	r24, Y+2	; 0x02
 aa4:	88 2f       	mov	r24, r24
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	a9 01       	movw	r20, r18
 aaa:	02 c0       	rjmp	.+4      	; 0xab0 <DIO_uint8ReadPinValue+0xce>
 aac:	55 95       	asr	r21
 aae:	47 95       	ror	r20
 ab0:	8a 95       	dec	r24
 ab2:	e2 f7       	brpl	.-8      	; 0xaac <DIO_uint8ReadPinValue+0xca>
 ab4:	ca 01       	movw	r24, r20
 ab6:	81 70       	andi	r24, 0x01	; 1
 ab8:	eb 81       	ldd	r30, Y+3	; 0x03
 aba:	fc 81       	ldd	r31, Y+4	; 0x04
 abc:	80 83       	st	Z, r24
 abe:	17 c0       	rjmp	.+46     	; 0xaee <DIO_uint8ReadPinValue+0x10c>
			break;
		case DIO_PORT_D:
			*VALUE = READ_BIT(PIND, PIN);
 ac0:	e0 e3       	ldi	r30, 0x30	; 48
 ac2:	f0 e0       	ldi	r31, 0x00	; 0
 ac4:	80 81       	ld	r24, Z
 ac6:	28 2f       	mov	r18, r24
 ac8:	30 e0       	ldi	r19, 0x00	; 0
 aca:	8a 81       	ldd	r24, Y+2	; 0x02
 acc:	88 2f       	mov	r24, r24
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	a9 01       	movw	r20, r18
 ad2:	02 c0       	rjmp	.+4      	; 0xad8 <DIO_uint8ReadPinValue+0xf6>
 ad4:	55 95       	asr	r21
 ad6:	47 95       	ror	r20
 ad8:	8a 95       	dec	r24
 ada:	e2 f7       	brpl	.-8      	; 0xad4 <DIO_uint8ReadPinValue+0xf2>
 adc:	ca 01       	movw	r24, r20
 ade:	81 70       	andi	r24, 0x01	; 1
 ae0:	eb 81       	ldd	r30, Y+3	; 0x03
 ae2:	fc 81       	ldd	r31, Y+4	; 0x04
 ae4:	80 83       	st	Z, r24
 ae6:	03 c0       	rjmp	.+6      	; 0xaee <DIO_uint8ReadPinValue+0x10c>
			break;
		default:
			return P_NOK;
 ae8:	51 e0       	ldi	r21, 0x01	; 1
 aea:	5d 83       	std	Y+5, r21	; 0x05
 aec:	04 c0       	rjmp	.+8      	; 0xaf6 <DIO_uint8ReadPinValue+0x114>
		}
	}
	else
		return P_NOK;
	return P_OK;
 aee:	1d 82       	std	Y+5, r1	; 0x05
 af0:	02 c0       	rjmp	.+4      	; 0xaf6 <DIO_uint8ReadPinValue+0x114>
		default:
			return P_NOK;
		}
	}
	else
		return P_NOK;
 af2:	81 e0       	ldi	r24, 0x01	; 1
 af4:	8d 83       	std	Y+5, r24	; 0x05
 af6:	8d 81       	ldd	r24, Y+5	; 0x05
	return P_OK;
}
 af8:	27 96       	adiw	r28, 0x07	; 7
 afa:	0f b6       	in	r0, 0x3f	; 63
 afc:	f8 94       	cli
 afe:	de bf       	out	0x3e, r29	; 62
 b00:	0f be       	out	0x3f, r0	; 63
 b02:	cd bf       	out	0x3d, r28	; 61
 b04:	cf 91       	pop	r28
 b06:	df 91       	pop	r29
 b08:	08 95       	ret

00000b0a <ToggleLed>:

/************************************************************/
/*****************	Main Function section    ****************/
/************************************************************/
void ToggleLed()
{
 b0a:	df 93       	push	r29
 b0c:	cf 93       	push	r28
 b0e:	cd b7       	in	r28, 0x3d	; 61
 b10:	de b7       	in	r29, 0x3e	; 62
	TOGGLE_BIT(PORTA, 7);
 b12:	ab e3       	ldi	r26, 0x3B	; 59
 b14:	b0 e0       	ldi	r27, 0x00	; 0
 b16:	eb e3       	ldi	r30, 0x3B	; 59
 b18:	f0 e0       	ldi	r31, 0x00	; 0
 b1a:	90 81       	ld	r25, Z
 b1c:	80 e8       	ldi	r24, 0x80	; 128
 b1e:	89 27       	eor	r24, r25
 b20:	8c 93       	st	X, r24

}
 b22:	cf 91       	pop	r28
 b24:	df 91       	pop	r29
 b26:	08 95       	ret

00000b28 <main>:

void main()
{
 b28:	df 93       	push	r29
 b2a:	cf 93       	push	r28
 b2c:	cd b7       	in	r28, 0x3d	; 61
 b2e:	de b7       	in	r29, 0x3e	; 62
	DIO_init();
 b30:	0e 94 c2 01 	call	0x384	; 0x384 <DIO_init>
	DIO_uint8SetPortDirection(DIO_PORT_A, DIO_PORT_OUT);
 b34:	80 e0       	ldi	r24, 0x00	; 0
 b36:	61 e0       	ldi	r22, 0x01	; 1
 b38:	0e 94 17 04 	call	0x82e	; 0x82e <DIO_uint8SetPortDirection>
	DIO_uint8SetPortDirection(DIO_PORT_D, DIO_PORT_IN);
 b3c:	83 e0       	ldi	r24, 0x03	; 3
 b3e:	60 e0       	ldi	r22, 0x00	; 0
 b40:	0e 94 17 04 	call	0x82e	; 0x82e <DIO_uint8SetPortDirection>
	DIO_uint8SetPortValue(DIO_PORT_D, 0xff); //enable pull up resistance
 b44:	83 e0       	ldi	r24, 0x03	; 3
 b46:	6f ef       	ldi	r22, 0xFF	; 255
 b48:	0e 94 a8 04 	call	0x950	; 0x950 <DIO_uint8SetPortValue>

	ENABLE_GLOBAL_INTERRUPT();
 b4c:	af e5       	ldi	r26, 0x5F	; 95
 b4e:	b0 e0       	ldi	r27, 0x00	; 0
 b50:	ef e5       	ldi	r30, 0x5F	; 95
 b52:	f0 e0       	ldi	r31, 0x00	; 0
 b54:	80 81       	ld	r24, Z
 b56:	80 68       	ori	r24, 0x80	; 128
 b58:	8c 93       	st	X, r24
	EXTINT_uint8ExternalInt0(EXTINT_RISING_EDGE);
 b5a:	81 e0       	ldi	r24, 0x01	; 1
 b5c:	0e 94 c5 00 	call	0x18a	; 0x18a <EXTINT_uint8ExternalInt0>
	EXTINT_callbackInt0(ToggleLed);
 b60:	85 e8       	ldi	r24, 0x85	; 133
 b62:	95 e0       	ldi	r25, 0x05	; 5
 b64:	0e 94 0c 01 	call	0x218	; 0x218 <EXTINT_callbackInt0>
 b68:	ff cf       	rjmp	.-2      	; 0xb68 <main+0x40>

00000b6a <_exit>:
 b6a:	f8 94       	cli

00000b6c <__stop_program>:
 b6c:	ff cf       	rjmp	.-2      	; 0xb6c <__stop_program>
