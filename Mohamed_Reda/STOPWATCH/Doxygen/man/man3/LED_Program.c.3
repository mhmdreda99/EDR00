.TH "HAL/LED/LED_Program.c" 3 "Thu Apr 21 2022" "Version 1.0" "STOPWATCH" \" -*- nroff -*-
.ad l
.nh
.SH NAME
HAL/LED/LED_Program.c
.SH SYNOPSIS
.br
.PP
\fC#include '\&.\&./\&.\&./LIB/STD_TYPES\&.h'\fP
.br
\fC#include '\&.\&./\&.\&./LIB/STD_MACROS\&.h'\fP
.br
\fC#include '\&.\&./\&.\&./MCAL/DIO/DIO_Interface\&.h'\fP
.br
\fC#include 'LED_Private\&.h'\fP
.br
\fC#include 'LED_Interface\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBu8\fP \fBLED_u8InitOneLed\fP (\fBu8\fP u8Reg, \fBu8\fP u8Bit)"
.br
.RI "Prototype : u8 \fBLED_u8InitOneLed(u8 u8Reg,u8 u8Bit)\fP; Description : Initialize one LED on specific port and bit\&. "
.ti -1c
.RI "\fBu8\fP \fBLED_u8InitLedString\fP (\fBu8\fP u8Reg)"
.br
.RI "Prototype : u8 \fBLED_u8InitLedString(u8 u8Reg)\fP; Description : Initialize string of 8 LEDs on specific port\&. "
.ti -1c
.RI "\fBu8\fP \fBLED_u8LedOnOff\fP (\fBu8\fP u8Reg, \fBu8\fP u8Bit, \fBu8\fP u8State)"
.br
.RI "Prototype : u8 \fBLED_u8LedOnOff(u8 u8Reg,u8 u8Bit,u8 u8State)\fP; Description : Turn one Led on and off\&. "
.ti -1c
.RI "\fBu8\fP \fBLED_u8LedStringOnOff\fP (\fBu8\fP u8Reg, \fBu8\fP u8Value)"
.br
.RI "Prototype : u8 \fBLED_u8LedStringOnOff(u8 u8Reg,u8 u8Value)\fP; Description : Turn string of 8 Leds on and off\&. "
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBu8\fP LED_u8InitLedString (\fBu8\fP u8Reg)"

.PP
Prototype : u8 \fBLED_u8InitLedString(u8 u8Reg)\fP; Description : Initialize string of 8 LEDs on specific port\&. 
.PP
\fBParameters\fP
.RS 4
\fIu8Reg\fP Register: takes only DIO_PORTA,DIO_PORTB,DIO_PORTC,DIO_PORTD 
.RE
.PP
\fBReturns\fP
.RS 4
u8 u8 number used for error handling (0) means no error,(1) means Undefined PORT Argument 
.RE
.PP

.SS "\fBu8\fP LED_u8InitOneLed (\fBu8\fP u8Reg, \fBu8\fP u8Bit)"

.PP
Prototype : u8 \fBLED_u8InitOneLed(u8 u8Reg,u8 u8Bit)\fP; Description : Initialize one LED on specific port and bit\&. 
.PP
\fBParameters\fP
.RS 4
\fIu8Reg\fP Register: takes only DIO_PORTA,DIO_PORTB,DIO_PORTC,DIO_PORTD 
.br
\fIu8Bit\fP bit : takes only DIO_Px0,DIO_Px1,DIO_Px2,DIO_Px3,DIO_Px4,DIO_Px5,DIO_Px6,DIO_Px7 ex: DIO_PA0,DIO_PB6,DIO_PD2\&.\&.\&.\&. 
.RE
.PP
\fBReturns\fP
.RS 4
u8 u8 number used for error handling (0) means no error,(1) means Undefined PORT Argument, (2) means Bit number out of range 
.RE
.PP

.SS "\fBu8\fP LED_u8LedOnOff (\fBu8\fP u8Reg, \fBu8\fP u8Bit, \fBu8\fP u8State)"

.PP
Prototype : u8 \fBLED_u8LedOnOff(u8 u8Reg,u8 u8Bit,u8 u8State)\fP; Description : Turn one Led on and off\&. 
.PP
\fBParameters\fP
.RS 4
\fIu8Reg\fP Register: takes only DIO_PORTA,DIO_PORTB,DIO_PORTC,DIO_PORTD 
.br
\fIu8Bit\fP bit : takes only DIO_Px0,DIO_Px1,DIO_Px2,DIO_Px3,DIO_Px4,DIO_Px5,DIO_Px6,DIO_Px7 ex: DIO_PA0,DIO_PB6,DIO_PD2\&.\&.\&.\&. 
.br
\fIu8State\fP State : takes only ON OFF 
.RE
.PP
\fBReturns\fP
.RS 4
u8 u8 number used for error handling (0) means no error,(1) means Undefined PORT Argument, (2) means Bit number out of range, (3) means Bit value out of range 
.RE
.PP

.SS "\fBu8\fP LED_u8LedStringOnOff (\fBu8\fP u8Reg, \fBu8\fP u8Value)"

.PP
Prototype : u8 \fBLED_u8LedStringOnOff(u8 u8Reg,u8 u8Value)\fP; Description : Turn string of 8 Leds on and off\&. 
.PP
\fBParameters\fP
.RS 4
\fIu8Reg\fP Register: takes only DIO_PORTA,DIO_PORTB,DIO_PORTC,DIO_PORTD 
.br
\fIu8Value\fP Value : takes only ON OFF or custom value 
.RE
.PP
\fBReturns\fP
.RS 4
u8 number used for error handling (0) means no error,(1) means Undefined PORT Argument 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for STOPWATCH from the source code\&.
