<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="d7/dca/_s_t_d___m_a_c_r_o_s_8h" kind="file" language="C++">
    <compoundname>STD_MACROS.h</compoundname>
    <includedby refid="d2/d61/_d_i_o___interface_8h" local="yes">MCAL/DIO/DIO_Interface.h</includedby>
    <includedby refid="d0/dcc/_l_e_d___program_8c" local="yes">HAL/LED/LED_Program.c</includedby>
    <invincdepgraph>
      <node id="1">
        <label>LIB/STD_MACROS.h</label>
        <link refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>APP/main.c</label>
        <link refid="d0/d29/main_8c"/>
      </node>
      <node id="5">
        <label>HAL/LED/LED_Program.c</label>
        <link refid="d0/dcc/_l_e_d___program_8c"/>
      </node>
      <node id="2">
        <label>MCAL/DIO/DIO_Interface.h</label>
        <link refid="d2/d61/_d_i_o___interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>MCAL/DIO/DIO_Program.c</label>
        <link refid="dd/dfd/_d_i_o___program_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a75582c7b79f6d462e04e49ef63c33795" prot="public" static="no">
        <name>SET_BIT</name>
        <param><defname>REG</defname></param>
        <param><defname>BIT_NUM</defname></param>
        <initializer>((REG)|=(1&lt;&lt;(BIT_NUM)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LIB/STD_MACROS.h" line="23" column="9" bodyfile="LIB/STD_MACROS.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a07262b5e9cc7ce7a2e55f1c157e99a13" prot="public" static="no">
        <name>CLEAR_BIT</name>
        <param><defname>REG</defname></param>
        <param><defname>BIT_NUM</defname></param>
        <initializer>((REG)&amp;=(~(1&lt;&lt;(BIT_NUM))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LIB/STD_MACROS.h" line="31" column="9" bodyfile="LIB/STD_MACROS.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a92554b11b0ee688137d1d18d7b1aebbb" prot="public" static="no">
        <name>TOGGLE_BIT</name>
        <param><defname>REG</defname></param>
        <param><defname>BIT_NUM</defname></param>
        <initializer>((REG)^=(1&lt;&lt;(BIT_NUM)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LIB/STD_MACROS.h" line="38" column="9" bodyfile="LIB/STD_MACROS.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1ac9767b66a8de270e7eb51c24e404325b" prot="public" static="no">
        <name>GET_BIT</name>
        <param><defname>REG</defname></param>
        <param><defname>BIT_NUM</defname></param>
        <initializer>((REG)&gt;&gt;(BIT_NUM))&amp;(0X01)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LIB/STD_MACROS.h" line="46" column="9" bodyfile="LIB/STD_MACROS.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a172351c00c3552c083f665fc3b440a4c" prot="public" static="no">
        <name>IS_BIT_SET</name>
        <param><defname>REG</defname></param>
        <param><defname>BIT_NUM</defname></param>
        <initializer>((REG)   &amp;  (1&lt;&lt; BIT_NUM))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LIB/STD_MACROS.h" line="52" column="9" bodyfile="LIB/STD_MACROS.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a53b5b65f6dde6f8319cbf3556cf376f4" prot="public" static="no">
        <name>IS_BIT_CLEAR</name>
        <param><defname>REG</defname></param>
        <param><defname>BIT_NUM</defname></param>
        <initializer>(!(<ref refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a172351c00c3552c083f665fc3b440a4c" kindref="member">IS_BIT_SET</ref>(REG,BIT_NUM)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LIB/STD_MACROS.h" line="58" column="9" bodyfile="LIB/STD_MACROS.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a6a203659ae1d198f05feb3f9f987013d" prot="public" static="no">
        <name>VAL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LIB/STD_MACROS.h" line="67" column="9" bodyfile="LIB/STD_MACROS.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a4548569297db62be86076b8f494138a7" prot="public" static="no">
        <name>BITCALC_ASSIGN_BIT</name>
        <param><defname>REG</defname></param>
        <param><defname>BIT_NUM</defname></param>
        <param><defname>VAL</defname></param>
        <initializer>REG=((REG)&amp;(~(1&lt;&lt;(BIT_NUM))))|(<ref refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a6a203659ae1d198f05feb3f9f987013d" kindref="member">VAL</ref>&lt;&lt;(BIT_NUM))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LIB/STD_MACROS.h" line="68" column="9" bodyfile="LIB/STD_MACROS.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a3c980171dff030311d0794c2de93f754" prot="public" static="no">
        <name>SET_BIT_VALUE</name>
        <param><defname>REG</defname></param>
        <param><defname>BIT</defname></param>
        <param><defname>Value</defname></param>
        <initializer>( (Value == 0) ? ( REG &amp;= ~(1&lt;&lt;BIT) ) : ( REG |= (1&lt;&lt;BIT) ) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="LIB/STD_MACROS.h" line="75" column="9" bodyfile="LIB/STD_MACROS.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/>Title<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>BIT_CALC<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/>Filename<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>BIT_CALC<sp/>.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/>Author<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>Mohamed<sp/>Reda</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/>Origin<sp/>Date<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>07/05/2021</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/>Version<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>1.0.0</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/>Compiler<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>TODO:<sp/>COMPILER<sp/>GOES<sp/>HERE</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>Target<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>TODO:<sp/>ATmega32</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>Notes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>None</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*This<sp/>is<sp/>preprocessor<sp/>(Header<sp/>file)<sp/>guard<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BIT_CALC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BIT_CALC_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/>This<sp/>macro<sp/>sets<sp/>a<sp/>certain<sp/>bit<sp/>in<sp/>any<sp/>Register<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>input<sp/>:<sp/>REG:<sp/>reg<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT_NUM:<sp/>number<sp/>of<sp/>the<sp/>bit<sp/>to<sp/>be<sp/>set<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21" refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a75582c7b79f6d462e04e49ef63c33795" refkind="member"><highlight class="comment">******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_BIT(REG,BIT_NUM)<sp/>((REG)|=(1&lt;&lt;(BIT_NUM)))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/**************************************************************</highlight></codeline>
<codeline lineno="27"><highlight class="comment">*This<sp/>macro<sp/>clears<sp/>a<sp/>certain<sp/>bit<sp/>in<sp/>any<sp/>Register<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a07262b5e9cc7ce7a2e55f1c157e99a13" refkind="member"><highlight class="comment">*<sp/>input<sp/>:<sp/>REG:<sp/><sp/>reg<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT_NUM:<sp/>number<sp/>of<sp/>the<sp/>bit<sp/>to<sp/>be<sp/>cleared<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment">*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLEAR_BIT(REG,BIT_NUM)<sp/>((REG)&amp;=(~(1&lt;&lt;(BIT_NUM))))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/************************************************************</highlight></codeline>
<codeline lineno="34" refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a92554b11b0ee688137d1d18d7b1aebbb" refkind="member"><highlight class="comment">*This<sp/>macro<sp/>toggles<sp/>a<sp/>certain<sp/>bit<sp/>in<sp/>any<sp/>Register<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment">*<sp/>input<sp/>:<sp/>REG:<sp/>reg<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT_NUM:<sp/>number<sp/>of<sp/>the<sp/>bit<sp/>to<sp/>be<sp/>toggle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment">*************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOGGLE_BIT(REG,BIT_NUM)<sp/>((REG)^=(1&lt;&lt;(BIT_NUM)))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/************************************************************</highlight></codeline>
<codeline lineno="41" refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1ac9767b66a8de270e7eb51c24e404325b" refkind="member"><highlight class="comment">*This<sp/>macro<sp/>to<sp/>get<sp/>a<sp/>certain<sp/>bit<sp/>in<sp/>any<sp/>Register<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="comment">*<sp/>input<sp/>:<sp/>REG:<sp/>REG<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT_NUM:<sp/>number<sp/>of<sp/>the<sp/>bit<sp/>to<sp/>get<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="comment">****************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a172351c00c3552c083f665fc3b440a4c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_BIT(REG,BIT_NUM)<sp/>((REG)&gt;&gt;(BIT_NUM))&amp;(0X01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/************************************************************</highlight></codeline>
<codeline lineno="48"><highlight class="comment">*This<sp/>macro<sp/>to<sp/>check<sp/>if<sp/><sp/>a<sp/>certain<sp/>bit<sp/>is<sp/>set<sp/>to<sp/>1<sp/>in<sp/>any<sp/>Register<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="comment">*<sp/>input<sp/>:<sp/>REG:<sp/>REG<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT_NUM:<sp/>number<sp/>of<sp/>the<sp/>bit<sp/>to<sp/>get<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51" refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a53b5b65f6dde6f8319cbf3556cf376f4" refkind="member"><highlight class="comment">****************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_BIT_SET(REG,BIT_NUM)<sp/><sp/><sp/><sp/><sp/><sp/>((REG)<sp/><sp/><sp/>&amp;<sp/><sp/>(1&lt;&lt;<sp/>BIT_NUM))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/************************************************************</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*This<sp/>macro<sp/>to<sp/>check<sp/>if<sp/><sp/>a<sp/>certain<sp/>bit<sp/>is<sp/>cleared<sp/><sp/>in<sp/>any<sp/>Register<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="comment">*<sp/>input<sp/>:<sp/>REG:<sp/>REG<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT_NUM:<sp/>number<sp/>of<sp/>the<sp/>bit<sp/>to<sp/>get<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="comment">****************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IS_BIT_CLEAR(REG,BIT_NUM)<sp/><sp/><sp/><sp/>(!(IS_BIT_SET(REG,BIT_NUM)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a6a203659ae1d198f05feb3f9f987013d" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a4548569297db62be86076b8f494138a7" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/************************************************************</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*This<sp/>macro<sp/>assign<sp/>a<sp/>certain<sp/>bit<sp/>in<sp/>any<sp/>Register<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="comment">*<sp/>input<sp/>:<sp/>REG:<sp/>reg<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT_NUM:<sp/>number<sp/>of<sp/>the<sp/>bit<sp/>to<sp/>be<sp/>assign<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VAL:<sp/>value<sp/>of<sp/>bit<sp/>to<sp/>assign<sp/>the<sp/>macro<sp/>with<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="comment">********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="d7/dca/_s_t_d___m_a_c_r_o_s_8h_1a3c980171dff030311d0794c2de93f754" refkind="member"><highlight class="normal"></highlight><highlight class="comment">/*if<sp/>VAL<sp/>==<sp/>1<sp/>assign<sp/>the<sp/>bit<sp/>with<sp/>1<sp/>value<sp/>otherwise<sp/>assign<sp/>it<sp/>with<sp/>0<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VAL<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BITCALC_ASSIGN_BIT(REG,BIT_NUM,VAL)<sp/>REG=((REG)&amp;(~(1&lt;&lt;(BIT_NUM))))|(VAL&lt;&lt;(BIT_NUM))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/************************************************************</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*This<sp/>macro<sp/>assign<sp/>a<sp/>certain<sp/>bit<sp/>in<sp/>any<sp/>Register<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="comment">*<sp/>input<sp/>:<sp/>REG:<sp/>reg<sp/>name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BIT:<sp/>number<sp/>of<sp/>the<sp/>bit<sp/>to<sp/>be<sp/>assign<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Value:<sp/>value<sp/>of<sp/>bit<sp/>to<sp/>assign<sp/>the<sp/>macro<sp/>with<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="comment">********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_BIT_VALUE(REG,BIT,Value)<sp/>(<sp/>(Value<sp/>==<sp/>0)<sp/>?<sp/>(<sp/>REG<sp/>&amp;=<sp/>~(1&lt;&lt;BIT)<sp/>)<sp/>:<sp/>(<sp/>REG<sp/>|=<sp/>(1&lt;&lt;BIT)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="LIB/STD_MACROS.h"/>
  </compounddef>
</doxygen>
